{"version":3,"sources":["store/actions/action_types.js","store/reducers/auth_reducer.js","function/GetUser.js","hooks/Friend/Match.js","hooks/Home/Home.js","function/Copyright.js","hooks/Login/useStyles.js","hooks/Login/Login.js","hooks/Register/useStyles.js","hooks/Register/Register.js","hooks/AvatarUser.js","hooks/Lang.js","hooks/Users/UsersCard.js","function/GetLangs.js","hooks/Users/UsersList.js","hooks/Users/Users.js","function/GetUsers.js","hooks/Secret.js","hooks/Messenger/Message/Message.js","hooks/Messenger/Messages/Messages.js","hooks/Messenger/Input/InputEmo.js","hooks/Messenger/Chat/Chat.js","hooks/Messenger/Input/InputChat.js","hooks/Messenger/Input/InputPicture.js","hooks/Album.js","hooks/Friend/Friend.js","hooks/BlockUser/BlockUser.js","hooks/Profile.js","function/CheckRoom.js","hooks/EditUser/Albums/CreateAlbum.js","hooks/EditUser/Albums/EditAlbum.js","hooks/EditUser/Albums/AddImage.js","hooks/EditUser/Albums/Albums.js","hooks/EditUser/AddAvatar.js","hooks/EditUser/Langs/LangsUser.js","function/SelectLangs.js","hooks/EditUser/Edit.js","function/LogOutTimer.js","hooks/MailBox/MessageCard.js","hooks/MailBox/MailboxCard.js","hooks/MailBox/Mailbox.js","hooks/BottomNav/BottomNav.js","hooks/Auth.js","hooks/Appbar/Appbar.js","hooks/ResetPswd/CodeForm.js","hooks/ResetPswd/EmailForm.js","hooks/ResetPswd/NewPasswordForm.js","function/UseStyles.js","hooks/ResetPswd/ResetPassword.js","theme.js","App.js","withAuth.js","serviceWorker.js","index.js"],"names":["LOGOUT","initialState","user","is_authenticated","filter","AuthReducer","state","action","type","localStorage","setItem","JSON","stringify","payload","token","ACTION_TYPES","clear","console","log","getUser","id","fetch","method","headers","then","res","json","useStyles","makeStyles","theme","root","display","margin","spacing","Match","userId","classes","authState","useContext","authContext","useState","match","setMatch","isMatch","setIsMatch","friendWith","friends","includes","friendBy","friendsby","useEffect","response","className","Avatar","alt","nickname","src","avatar","Home","content","message","setMessage","text","length","map","key","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","paper","marginTop","flexDirection","alignItems","backgroundColor","palette","secondary","main","form","width","submit","Login","dispatch","email","password","isSubmitting","errorMessage","data","setData","handleInputChange","event","target","name","value","Container","component","maxWidth","onSubmit","preventDefault","body","ok","resJson","error","Error","catch","statusText","TextField","required","fullWidth","label","autoComplete","autoFocus","onChange","Button","disabled","FormControlLabel","control","Checkbox","Grid","container","item","xs","Box","mt","description","city","age","Register","handleChange","noValidate","prevState","gender","languages","encType","sm","FormLabel","RadioGroup","aria-label","Radio","justify","StyledBadge","withStyles","badge","boxShadow","background","transform","opacity","Badge","AvatarUser","online","url","_id","overlap","anchorOrigin","vertical","horizontal","justifyContent","flexWrap","Lang","language","Chip","langue","height","media","UsersCard","Card","CardActionArea","CardContent","gutterBottom","List","toString","CardActions","size","getLangs","overflow","marginBottom","gridList","option","fontSize","marginRight","formControl","minWidth","selectEmpty","UsersList","users","usersList","setUsersList","setLoading","langs","setLangs","genderFilter","setGenderFilter","langFilter","setLangFilter","cityFilter","setCityFilter","sort","setSort","statutFilter","setStatutFilter","filterOptions","createFilterOptions","limit","filteredUsers","Filters","some","filters","newList","Object","keys","every","newSortingList","reverse","FormControl","InputLabel","Select","labelId","MenuItem","Autocomplete","options","cities","autoHighlight","getOptionLabel","newValue","renderOption","Fragment","country","renderInput","params","inputProps","undefined","getOptionSelected","placeholder","onClick","Divider","cellheight","cols","e","to","Users","setUsers","loading","blockedusers","blocked","blockedbyusers","blockedby","concat","blockFilter","getUsers","m","Secret","setState","this","Component","padding","Usertext","Message","sender","img","createdAt","senderUser","setSenderUser","isSentByCurrentUser","trimmedName","trim","toLowerCase","ListItemText","primary","ReactEmoji","emojify","Messages","messages","oldMessage","scrollRef","useRef","scrollToBottom","current","scrollIntoView","behavior","i","ListItem","ref","drawer","flexShrink","drawerPaper","InputEmo","addEmoji","toggleDrawer","anchor","open","IconButton","Drawer","onClose","classesname","onSelect","title","set","socket","InputChat","sendMessage","setTextMsg","textMsg","OutlinedInput","onKeyPress","endAdornment","emoji","native","input","InputPicture","sendImg","accept","htmlFor","topSection","messageSection","inputSection","Chat","useParams","receiver","receiverUser","setReceiverUser","setMessages","setOldMessage","roomid","roomId","anchorEl","setAnchorEl","handleClose","Authorization","user1","user2","io","emit","alert","on","classNameEdit","large","currentTarget","aria-controls","aria-haspopup","Menu","keepMounted","Boolean","files","MyformData","FormData","append","icon","heroContent","heroButtons","cardGrid","paddingTop","paddingBottom","card","cardMedia","cardContent","flexGrow","footer","Album","album","CardMedia","image","createStyles","Friend","setUser","BlockUser","isBlocked","initState","userProfile","isFetching","hasError","Profile","setUserProfile","room","setRoom","idProfile","checkRoom","uuidv4","maxwidth","aria-hidden","startIcon","button","albums","CreateAlbum","setAlbum","setOpen","handleCreate","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","EditAlbum","handleEditAlbum","handleDeleteAlbum","AddImage","setImg","handleSubmit","axios","post","result","reader","FileReader","addEventListener","readAsDataURL","multiple","Albums","paragraph","md","float","fab","position","bottom","right","AddAvatar","setAvatarData","HandleAvatarSubmit","Fab","listStyle","chip","LangsUser","handleDelete","nativName","onDelete","SelectLangs","handleSelectLang","setValue","inputValue","setInputValue","onInputChange","newInputValue","TabPanel","props","children","index","other","role","hidden","p","a11yProps","Edit","setCity","avatarData","React","reason","handleFormSubmit","selectlang","AppBar","Tabs","Tab","languageId","defaultValue","multiline","rowsMax","Snackbar","autoHideDuration","elevation","severity","MessageCard","wrap","zeroMinWidth","noWrap","MailboxCard","lastMsg","date","toUserFind","find","toUser","setToUser","unread","connectedUser","push","divider","ListItemAvatar","nickame","toLocaleString","badgeContent","Mailbox","setError","rooms","setRooms","BottomNav","useLocation","pathname","BottomNavigation","BottomNavigationAction","LogOutTimer","useIdleTimer","timeout","onIdle","get","onActive","onAction","debounce","Auth","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","hide","drawerHeader","mixins","toolbar","contentShift","minHeight","PersistentDrawerLeft","useTheme","auth","openE1","CssBaseline","clsx","Toolbar","edge","transformOrigin","direction","ListItemIcon","code","submitting","serverError","CodeForm","handleCodeSubmit","setCode","EmailForm","handleEmailSubmit","userEmail","setEmail","pswd","NewPasswordForm","handlePswdSubmit","SetPassword","backButton","instructions","ResetPassword","history","useHistory","activeStep","setActiveStep","steps","handleNext","prevActiveStep","Stepper","alternativeLabel","Step","StepLabel","step","getStepContent","createMuiTheme","createContext","App","ComponentToProtect","useReducer","ThemeProvider","Provider","path","exact","redirect","status","err","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.93b58b18.chunk.js","sourcesContent":["export const SUCCESS = \"SUCCESS\"\r\n\r\nexport const FAILURE = \"FAILURE\"\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\n\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\"\r\n\r\nexport const ADD_USER = \"ADD_PROFILE\"\r\n\r\nexport const REMOVE_USER = \"REMOVE_PROFILE\"\r\n\r\nexport const USER_INPUT_CHANGE = \"USER_INPUT_CHANGE\"\r\n\r\nexport const USER_INPUT_SUBMIT = \"USER_INPUT_SUBMIT\"\r\n\r\nexport const LOGOUT = \"USER_INPUT_SUBMIT\"\r\n\r\nexport const REQUEST = \"FETCH_REQUEST\"\r\n\r\nexport const REMOVE_ITEM = \"REMOVE_ITEM\"\r\n\r\n\r\nexport const ADD_FILTER = \"ADD_FILTER\"\r\n//Notez que ces constantes définissent le  type  des  actions","//We use the syntax import * as Reducer1 because we want to import both the Reducer1 and the initialState. \r\nimport * as ACTION_TYPES from '../actions/action_types'\r\n\r\n//Les reducers \r\n//contiennent les méthodes qui effectuent le changement d’état de votre application.\r\n\r\n//Dans Redux, les reducers ont pour mission de modifier le store\r\n// en réponse aux actions.\r\n\r\nexport const initialState = { \r\n  user: null,\r\n  is_authenticated: false,\r\n  filter:null\r\n}\r\n\r\n//Décrit comment une action va modifier un état donner pour retourner un nouvel état.\r\nexport  const AuthReducer = ( state= initialState , action) => {\r\n  \r\n    switch (action.type) {\r\n  \r\n      case  ACTION_TYPES.ADD_USER:\r\n        localStorage.setItem(\"user\", JSON.stringify(action.payload.user));\r\n        localStorage.setItem(\"token\", JSON.stringify(action.payload.token));\r\n        return {\r\n          ...state,\r\n          is_authenticated: true,\r\n          user: action.payload.user,\r\n          token: action.payload.token\r\n        };\r\n  \r\n      case ACTION_TYPES.LOGIN_SUCCESS:\r\n        localStorage.setItem(\"user\", JSON.stringify(action.payload.user));\r\n        localStorage.setItem(\"token\", JSON.stringify(action.payload.token));  \r\n        return {\r\n          ...state,\r\n          is_authenticated: true,\r\n          user: action.payload.user,\r\n          token: action.payload.token\r\n        };\r\n      case  ACTION_TYPES.USER_INPUT_CHANGE:\r\n        localStorage.setItem(\"user\", JSON.stringify(action.payload.user));\r\n        localStorage.setItem(\"token\", JSON.stringify(action.payload.token));\r\n        return {\r\n          ...state,\r\n          is_authenticated: true,\r\n          user: action.payload.user,\r\n          token: action.payload.token\r\n        };\r\n      case ACTION_TYPES.LOGIN_FAILURE:\r\n        return {\r\n          ...state,\r\n          is_authenticated: false\r\n        }\r\n\r\n      case ACTION_TYPES.LOGOUT: \r\n        //When this action is dispatched, we clear localStorage of all data and set user and token to null .\r\n        localStorage.clear();\r\n        return {\r\n          ...state,\r\n          is_authenticated: false,\r\n          user: null,\r\n          token: null\r\n        }\r\n        //peu etre inutile\r\n      case ACTION_TYPES.ADD_FILTER:\r\n        console.log(\"action payload\",action.payload)\r\n        localStorage.setItem(\"filter\", JSON.stringify(action.payload));\r\n        return {\r\n          ...state,\r\n          filter: action.payload\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  export default AuthReducer;\r\n\r\n\r\n  \r\n ","export function getUser(id) {\r\n\r\nreturn fetch(`http://localhost:5000/api/user/${id}`, {\r\n  method: 'GET',\r\n    headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n})\r\n  .then(res => res.json()); \r\n}\r\n\r\n\r\n\r\n","import React , { useEffect, useContext,useState } from 'react';\r\nimport {getUser} from '../../function/GetUser';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { authContext } from \"../../App\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst Match = ({userId}) => {\r\n  const classes = useStyles();\r\n  const { state: authState } = useContext(authContext);\r\n\r\n\r\n  const [match, setMatch]= useState();\r\n// Check if id \r\n  const [isMatch, setIsMatch] = useState(false)\r\n\r\n  const friendWith = authState.user.friends.includes(userId); \r\n// and\r\n  const friendBy = authState.user.friendsby.includes(userId);\r\n\r\n//console.log(userId,match,'match',isMatch) \r\n//affichage du portrait de User//\r\n\r\nuseEffect(()  =>  {\r\n  if( friendWith === true && friendBy === true){\r\n    setIsMatch(true)\r\n    getUser(userId)\r\n    .then( response => {\r\n      setMatch(response)\r\n    })\r\n  }\r\n  },[authState.token,userId,friendWith,friendBy]);\r\n\r\n    return (    \r\n       \r\n           isMatch && /*= true ? */match != null &&\r\n        \r\n        <div className={classes.root}>\r\n            <Avatar      alt={match.nickname}  src={\"/uploads/avatar/\" + match.avatar}       />\r\n        </div>\r\n       \r\n    \r\n    )\r\n}\r\n\r\nexport default Match ; ","import React, { useEffect, useState , useContext } from 'react';\r\nimport {authContext} from '../../App';\r\n\r\nimport './Home.css';\r\n\r\nimport Match from '../Friend/Match';  \r\n\r\nconst Home = () => {\r\n  const initialState = {\r\n  content:'Loading...'\r\n  };\r\n\r\n  const { state: authState }  = useContext(authContext);\r\n  const [message, setMessage] = useState(initialState);\r\n\r\n \r\n  \r\n  // instead of state.user.nickname\r\n  //const { user: { nickname } = {} } = state;\r\n  \r\nuseEffect(() => {\r\n    \r\n    fetch('/api/home')\r\n      .then(res => res.text())\r\n      .then(res =>   setMessage({ content: res })    )\r\n\r\n  },[]);\r\n  \r\n\r\n  return (\r\n\r\n    <div className=\"container\">\r\n   \r\n    <p>{message.content} {authState.user.nickname}</p>\r\n    \r\n     Match \\0/\r\n    {authState.user.friends.length > 0 && \r\n      authState.user.friends.map((userId) =>\r\n        <Match  userId={userId} key={userId}  />       \r\n      )}\r\n\r\n    \r\n  \r\n    </div>\r\n  );\r\n\r\n\r\n}\r\nexport default Home;\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"https://github.com/Clayclay\">\r\n          Clayclay\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\n  export default Copyright;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\n\r\n  export default useStyles;","import React , { useContext, useState } from 'react';\r\nimport { authContext } from \"../../App\";\r\n\r\nimport * as ACTION_TYPES from '../../store/actions/action_types';\r\n  \r\nimport Copyright from \"../../function/Copyright\";\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport useStyles from './useStyles';\r\n\r\n\r\nconst Login = () => {\r\n\r\n // OBJET MAGIQUE QUI TRANSMET A TS LES COMPO \r\n const {   dispatch  }  = useContext(authContext);\r\n const classes = useStyles();\r\n\r\n //INIT\r\n const initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  isSubmitting: false,\r\n  errorMessage: null\r\n};\r\n   \r\n   const [data, setData] = useState(initialState);\r\n   //initialState object into the useStatehook.\r\n   //handle the pseudo state (name), the password state\r\n   const handleInputChange = event => {\r\n       setData({\r\n         ...data,\r\n         [event.target.name]: event.target.value\r\n       });\r\n     };\r\n\r\n     const handleFormSubmit = (event) => { //want this method to make a request to authenticate with our backend and save the resulting token to a browser cookie.\r\n      event.preventDefault();\r\n      setData({\r\n        ...data,\r\n        isSubmitting: true,\r\n        errorMessage: null\r\n      });\r\n         fetch('/api/authenticate', {// use fetch to authenticate against our backend and retrieve a JSON Web Token\r\n          method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify( {\r\n            email: data.email,\r\n            password: data.password\r\n          })   \r\n        }) \r\n      .then(res => {  if (res.ok) { return res.json(); }  throw res;  })\r\n      .then(resJson => {\r\n        if (resJson.error) {\r\n          throw new Error(resJson.error);\r\n        }\r\n          // In order to call dispatch, we need to import the AuthContext from the App component into our Login component and then use the dispatch function\r\n         dispatch({ \r\n              type: ACTION_TYPES.LOGIN_SUCCESS,\r\n              payload: resJson \r\n           })\r\n        })\r\n         .catch(error => {\r\n            console.error(error);\r\n            setData({\r\n              ...data,\r\n              isSubmitting: false,\r\n              errorMessage: error.message || error.statusText\r\n            });\r\n           \r\n        })  \r\n    };\r\n\r\n    return ( \r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n    \r\n        <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n       <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n      <form onSubmit={handleFormSubmit}>\r\n      <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={data.email}\r\n            onChange={handleInputChange}\r\n          /> \r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            autoFocus\r\n            value={data.password}\r\n            onChange={handleInputChange}\r\n          />\r\n       {/*message.content*/}\r\n       {data.errorMessage && (\r\n              <span className=\"form-error\">{data.errorMessage}</span>\r\n            )}\r\n\r\n           <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={data.isSubmitting}\r\n          >\r\n            {data.isSubmitting ? (\r\n                \"Loading...\"\r\n              ) : (\r\n                \"Sign In\"\r\n              )}\r\n          </Button>\r\n\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me TODO\"\r\n          />\r\n\r\n       </form>\r\n       \r\n       <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"resetpassword\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"register\" variant=\"body2\"   >\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n          </div>\r\n          <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n    )\r\n  }\r\n  export default Login;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\n  export default useStyles;","import React, {useState, useContext}  from \"react\";\r\nimport { authContext } from \"../../App\";\r\nimport * as ACTION_TYPES from '../../store/actions/action_types';\r\n\r\nimport Copyright from \"../../function/Copyright\";\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nimport useStyles from './useStyles';\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  description: \"\",\r\n  city: \"\",\r\n  age: \"\", \r\n  nickname:\"\",\r\n  isSubmitting: false,\r\n  errorMessage: null       \r\n};\r\n\r\nexport const Register = () => {\r\n\r\n  const classes = useStyles();\r\n // OBJET MAGIQUE QUI TRANSMET A TS LES COMPO\r\n  const { dispatch }  = useContext(authContext);\r\n  const [data, setData] = useState(initialState);\r\n\r\n  const handleChange = event => {\r\n    setData({\r\n      ...data,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n   \r\n// a function that handles the form submission to the backend API\r\n  const handleSubmit = (event) => {\r\n    // the functional update \r\n    event.preventDefault();\r\n    //useState ne fusionne pas automatiquement les objets de mise à jour. avec prevState\r\n    setData(prevState => ({\r\n      ...prevState,\r\n      isSubmitting: true,\r\n      errorMessage: null       \r\n    }));\r\n\r\n     //use the fetch API to send payload to serveur\r\n     //that handles the form submission to the backend\r\n    fetch(\"/api/user\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({         \r\n        email: data.email,\r\n        password: data.password,\r\n        nickname: data.nickname,\r\n        age: data.age,\r\n        city: data.city,\r\n        description: data.description,\r\n        gender: data.gender,\r\n        languages: data.languages, \r\n      })\r\n    })\r\n        .then(res => res.json())\r\n       \r\n       //is successful, we will dispatch a LOGIN action\r\n      \r\n        .then(resJson => {\r\n          if (resJson.error) {\r\n            throw new Error(resJson.error);\r\n          }\r\n        dispatch({ \r\n             type: ACTION_TYPES.ADD_USER,\r\n             payload: resJson\r\n          })\r\n       })\r\n       .catch(error => {\r\n        console.error(error);\r\n         setData({\r\n           ...data,\r\n           isSubmitting: false,\r\n           errorMessage: error.message || error.statusText\r\n         });\r\n       });\r\n   };\r\n   \r\n return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n     \r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n          <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"nickname\"\r\n                name=\"nickname\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"nickname\"\r\n                label=\"Nickname\"\r\n                autoFocus\r\n                value={data.nickname}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={data.email}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n            <FormLabel component=\"legend\">Gender</FormLabel>\r\n            <RadioGroup aria-label=\"gender\" name=\"gender1\"  onChange={handleChange}>\r\n              <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n              <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n            </RadioGroup>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"age\"\r\n                name=\"age\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"age\"\r\n                label=\"Age\"\r\n                autoFocus\r\n                value={data.age}\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n\r\n            \r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"city\"\r\n                name=\"city\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"city\"\r\n                label=\"City\"\r\n                autoFocus\r\n                value={data.city}\r\n                onChange={handleChange}\r\n\r\n              />\r\n            </Grid>\r\n\r\n             </Grid>\r\n     {data.errorMessage && (\r\n               <span className=\"form-error\">{data.errorMessage}</span>\r\n             )}\r\n\r\n             <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={data.isSubmitting}\r\n          >\r\n             {data.isSubmitting ? (\r\n                 \"Loading...\"\r\n               ) : (\r\n                 \"Sign Up\"\r\n               )}\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        </div>\r\n       <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n      </Container>\r\n   )\r\n }\r\n\r\n export default Register;\r\n","import React, {useContext } from 'react';\r\nimport { authContext } from \"../App\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {withStyles } from '@material-ui/core/styles';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\n const StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: '#44b700',\r\n    color: '#44b700',\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n  },\r\n  '@keyframes ripple': {\r\n    '0%': {\r\n      transform: 'scale(.8)',\r\n      opacity: 1,\r\n    },\r\n    '100%': {\r\n      transform: 'scale(2.4)',\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst AvatarUser = ({avatar , nickname, online } ) => {\r\n\r\n  const { state: authState } = useContext(authContext);\r\nconst url = \"/uploads/\" + authState.user._id + \"/\" + avatar;\r\n\r\nconst isOnline=online;\r\nlet element\r\n\r\n if(isOnline){\r\n  element =\r\n    <StyledBadge\r\n      overlap=\"circle\"\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'right',\r\n      }}\r\n      variant=\"dot\"\r\n    >\r\n      <Avatar src={url} alt={nickname}  />\r\n    </StyledBadge>\r\n  \r\n }else{\r\n  element = <Avatar src={url} alt={nickname} /*className={classes.large}*/ />\r\n  \r\n }\r\n\r\n  return element\r\n};\r\n\r\nexport default AvatarUser;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      flexWrap: 'wrap',\r\n      '& > *': {\r\n        margin: theme.spacing(0.5),\r\n      },\r\n    },\r\n  }));\r\n\r\nconst Lang = ({language}) => {\r\n    const classes = useStyles();\r\n    return(\r\n   \r\n        <Grid className={classes.root}>\r\n        <Chip\r\n        label={language.langue}\r\n        />\r\n        </Grid>\r\n\r\n    );\r\n}\r\n\r\nexport default Lang;","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AvatarUser from '../AvatarUser';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Lang from '../Lang';\r\n\r\nimport List from '@material-ui/core/List';\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n     // maxWidth: 345,\r\n      \"margin-bottom\": 2,\r\n      height: \"-webkit-fill-available\",\r\n    },\r\n    media: {\r\n      //height: 140,\r\n    },\r\n     \r\n\r\n  }));\r\n\r\nconst UsersCard = ({user}) => {\r\n    const classes = useStyles();\r\n\r\n     return(\r\n\r\n<Card className={classes.root}>\r\n\r\n  <CardActionArea   >\r\n   <CardContent>\r\n<Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6} >\r\n                  <AvatarUser avatar={user.avatar} nickname={user.nickname}  online={user.online}  />\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h5\">\r\n                    {user.nickname}\r\n                  </Typography>\r\n                </Grid>\r\n\r\n                  <Grid item xs={6} sm  >\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      {user.age} y.o.  \r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6} sm >\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      {user.gender}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={2} >\r\n                  {user.languages && user.languages.map(language => (     \r\n                    \r\n                  <List key={language._id.toString()} language={language} >\r\n\r\n                     <Lang  key={language._id.toString()} language={language} />\r\n\r\n                  </List>\r\n                  ))}\r\n                </Grid>\r\n      </CardContent>\r\n \r\n   </CardActionArea>\r\n   <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More TODO\r\n        </Button>\r\n      </CardActions>\r\n</Card>\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default UsersCard;\r\n","export function getLangs(){\r\n    return fetch(\"/api/languages/\")\r\n    .then(res => res.json());\r\n\r\n}","import React , { useState, useEffect,useContext } from 'react';\r\nimport UsersCard from './UsersCard';\r\nimport './Users.css';\r\nimport { authContext } from \"../../App\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {getLangs} from '../../function/GetLangs';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Autocomplete, {\r\n  createFilterOptions\r\n} from \"@material-ui/lab/Autocomplete\";\r\nimport cities from '../../function/City/cities.json'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    \r\n  },\r\n  filter:{\r\n    marginBottom:'5px',\r\n  },\r\n  gridList: {\r\n    width: \"-webkit-fill-available\",\r\n  \r\n  },\r\n  option: {\r\n    fontSize: 15,\r\n    \"& > span\": {\r\n      marginRight: 10,\r\n      fontSize: 18\r\n    }\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 100,\r\n    maxWidth: 300\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n  \r\n}));\r\n\r\nconst UsersList = ({users  }) => {\r\n  const classes = useStyles();\r\n  const { state: authState } =useContext(authContext);\r\n  const [usersList, setUsersList] = useState(users);\r\n  const [loading, setLoading] = useState(true);\r\n  const [langs, setLangs]=useState([])\r\n  const [genderFilter, setGenderFilter] = useState(\"\");\r\n  const [langFilter, setLangFilter] = useState(null);\r\n  const [cityFilter, setCityFilter] = useState(null);\r\n  const [sort, setSort] = useState(\"\");\r\n\r\n  const [ statutFilter, setStatutFilter] = useState(\"\");\r\n\r\n  const filterOptions = createFilterOptions({\r\n    limit: 20 //City\r\n  }); \r\n\r\n  const handleClear = () => {\r\n    setCityFilter(null)\r\n    setGenderFilter(\"\")\r\n    setLangFilter(null)\r\n    setStatutFilter(\"\")\r\n  }\r\n\r\n  useEffect( () => {\r\n    let isSubscribed = true\r\n    getLangs()\r\n    .then( langs => { \r\n        if (isSubscribed) {}\r\n      setLangs(langs);\r\n    });\r\n    setLoading(false);\r\n    return () => isSubscribed = false\r\n    }, [authState.token]);\r\n\r\n  useEffect(( ) => {\r\n\r\n    const filterArray = (array, filters) => {\r\n      return array.filter((item) => {\r\n        return Object.keys(filters).every((key) => {\r\n          if (typeof filters[key] !== \"function\") {\r\n            return true;\r\n          }\r\n          return filters[key](item[key]);\r\n        });\r\n      });\r\n    };\r\n\r\n    const filteredUsers = users;\r\n    const Filters = {};\r\n\r\n    console.log(cityFilter)\r\n    if (cityFilter !== \"\" && cityFilter !== null) {\r\n      Filters[\"city\"] = (city) =>  city.name  === cityFilter.name ;\r\n    } else {}\r\n\r\n    if (genderFilter !== \"\") {\r\n      Filters[\"gender\"] = (gender) => gender === genderFilter;\r\n    } else {}\r\n\r\n    if (langFilter !== \"\" && langFilter !== null) {\r\n      Filters[\"languages\"] = (languages) =>\r\n        languages.some(({ langue }) => langue === langFilter.langue);\r\n    } else {}\r\n\r\n    if( statutFilter === true ){\r\n      Filters[\"online\"]= (online) => online === statutFilter;\r\n    }else{}\r\n     \r\n    const newList = filterArray(filteredUsers, Filters);\r\n//console.log(statutFilter)\r\n//console.log(' Filters',Filters)\r\n//setUsersList(newList);\r\n\r\nif (sort === \"new\") {\r\n  const newSortingList = [...newList].reverse(); \r\n  setUsersList(newSortingList);\r\n} else {\r\n  const newSortingList = [...newList].sort();\r\n  setUsersList(newSortingList);\r\n}  \r\n\r\n  },[genderFilter,cityFilter,langFilter,sort, statutFilter])\r\n\r\n       return (\r\n  \r\n        <Container maxWidth=\"md\" className={classes.root}>\r\n\r\n< Grid container className={classes.filter}  > \r\n  \r\n<FormControl component=\"fieldset\" variant=\"outlined\"  className={classes.formControl} >\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Gender</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={genderFilter}\r\n          onChange={(event) => setGenderFilter(event.target.value)}\r\n          label=\"Gender\"\r\n        >\r\n          <MenuItem value={\"\"}>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={\"female\"}>Female</MenuItem>\r\n          <MenuItem value={\"male\"}>Male</MenuItem>\r\n        </Select>\r\n</FormControl>\r\n\r\n\r\n<FormControl component=\"fieldset\" variant=\"outlined\"  className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Online</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={statutFilter}\r\n          onChange={(event) => setStatutFilter(event.target.value)}\r\n          label=\"Online\"\r\n        >\r\n          <MenuItem value={\"\"}>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={true}>Yes</MenuItem>\r\n          <MenuItem value={false}>No</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n<FormControl component=\"fieldset\"  className={classes.formControl}>\r\n  <Autocomplete\r\n        id=\"country-select\"\r\n        options={cities}\r\n        classes={{\r\n          option: classes.option\r\n        }}\r\n        autoHighlight\r\n        filterOptions={filterOptions}\r\n        getOptionLabel={(option) => option.name}\r\n        value={cityFilter}\r\n        onChange={(event, newValue) => {\r\n          setCityFilter(newValue);\r\n        }}\r\n        renderOption={(option) => (\r\n          <React.Fragment>\r\n            {option.name} ({option.country})\r\n          </React.Fragment>\r\n        )}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            id=\"field1\"\r\n            label=\"City\"\r\n            name=\"field1\"\r\n            variant=\"outlined\"\r\n            inputProps={{\r\n              ...params.inputProps,\r\n              autoComplete: \"off\"\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n</FormControl>\r\n<FormControl component=\"fieldset\" className={classes.formControl} >\r\n        <Autocomplete\r\n          id=\"tags-standard\"\r\n          options={langs}\r\n          getOptionLabel={(option) => option !== undefined && option.langue} \r\n          //if (option !== undefined) { return option.language }\r\n          value={langFilter}\r\n          onChange={(event, newValue) => {\r\n            setLangFilter(newValue);\r\n          }}\r\n          getOptionSelected={(option) => option.langue === langFilter.langue}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant=\"outlined\"\r\n              label=\"Language\"\r\n              placeholder=\"Languages\"\r\n            />\r\n          )}\r\n        />\r\n</FormControl>\r\n\r\n\r\n<FormControl component=\"fieldset\" className={classes.formControl} >\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Sort</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          value={sort}\r\n          onChange={(event) => setSort(event.target.value)}\r\n          label=\"Sort\"\r\n        >\r\n          <MenuItem value={\"\"}>\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={\"new\"}>New User</MenuItem>\r\n        </Select>  \r\n \r\n\r\n      </FormControl>\r\n\r\n      <FormControl component=\"fieldset\" className={classes.formControl} >\r\n           <Button onClick={() => handleClear() }\r\n        variant=\"contained\" \r\n        color=\"secondary\"\r\n      >\r\n          Clear\r\n      </Button>\r\n      </FormControl>\r\n\r\n<Divider/>\r\n</Grid>\r\n      \r\n\r\n    {\r\n      < Grid container spacing={3}  > \r\n        <Grid  cellheight={'auto'} className={classes.gridList} cols={1}  >\r\n            {  usersList.map(user => \r\n                <Grid item  key={user._id.toString()}  component={Link}  onClick={e => (!user._id) ? e.preventDefault() : null} to={`/user/${user._id}`} >\r\n                  <UsersCard key={user._id.toString()} user={user}  />\r\n                </Grid >\r\n              )\r\n            }\r\n        </Grid>        \r\n      </Grid>   \r\n    }\r\n\r\n      </Container>  \r\n       )\r\n  \r\n  }\r\n\r\n  export default UsersList;\r\n\r\n","import React , { useEffect, useContext, useState } from 'react';\r\nimport { authContext } from \"../../App\";\r\nimport { getUsers } from '../../function/GetUsers';\r\nimport UsersList from './UsersList';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst Users = () => {\r\n\r\n  const { state: authState } =useContext(authContext);\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [error, /*setError*/] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const id = authState.user._id;\r\n\r\n  const blockedusers= authState.user.blocked;\r\n  const blockedbyusers=authState.user.blockedby ;\r\n\r\n  const [blockFilter]= useState(blockedusers.concat(blockedbyusers));\r\n//console.log(\"blockfilter\",blockFilter);\r\n  //const [usersList, setUsersList] = useState([]);\r\n\r\n  /*const filterArray = (array, filters) => {\r\n    return array.filter((item) => {\r\n      return Object.keys(filters).every((key) => {\r\n        if (typeof filters[key] !== \"function\") {\r\n          return true;\r\n        }\r\n        return filters[key](item[key]);\r\n      });\r\n    });\r\n  };*/\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getUsers(id)  \r\n    .then(users => {\r\n      let filteredUsers = users;\r\n\r\n      if (blockFilter !=='' ){\r\n        blockFilter.map(  (item)  =>  (  \r\n         filteredUsers = users.filter((user) => !blockFilter.includes(user._id))\r\n        ))\r\n      setUsers(filteredUsers) \r\n      }\r\n//console.log(\"users\",users,filteredUsers)\r\n      setUsers(filteredUsers)\r\n      setLoading(false);\r\n    })\r\n  }, [authState.token,id,blockFilter]);\r\n\r\n\r\n    return(\r\n\r\n      <Box component=\"span\" m={1}>\r\n\r\n        {loading ? (\r\n          <span className=\"loader\">LOADING...</span>\r\n        ) : error ? (\r\n          <span className=\"error\">AN ERROR HAS OCCURED</span>\r\n        ) : (\r\n          <>\r\n\r\n\r\n    <UsersList users={users} blockedusers={authState.user.blocked} blockedbyusers={authState.user.blockedby} />\r\n\r\n          </>\r\n        )} \r\n\r\n      </Box>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Users;\r\n\r\n","export function getUsers(id) {\r\n    return fetch(`http://localhost:5000/api/users/${id}`, {\r\n    method: 'GET',\r\n      headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  })\r\n      .then(res => res.json());\r\n  }","import React, { Component } from 'react';\r\n\r\nexport default class Secret extends Component {\r\n    constructor() {\r\n      super();\r\n      //Set default message\r\n      this.state = {\r\n        message: 'Loading...'\r\n      }\r\n    }\r\n    componentDidMount() {\r\n      //GET message from server using fetch api\r\n      fetch('/api/secret')\r\n        .then(res => res.text())\r\n        .then(res => this.setState({message: res}));\r\n    }\r\n    render() {\r\n      return (\r\n        <div>\r\n          <h1>Secret</h1>\r\n          <p>{this.state.message}</p>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React, { useState, useEffect } from 'react';\r\nimport './Message.css';       //TODO \r\nimport ReactEmoji from 'react-emoji';\r\nimport {getUser} from '../../../function/GetUser';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n// probleme de confusion entre user + id sender voir convertir id en  name\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   text: {\r\n    \"border-radius\": \"20px\",\r\n    padding: \"10px 20px\",\r\n    color:\" white\",\r\n    width:\"fit-content\",\r\n     background:\"#2979FF\"   \r\n   },\r\n\r\n   Usertext: {\r\n    \"border-radius\": \"20px\",\r\n    padding: \"10px 20px\",\r\n    \r\n    width:\"fit-content\",\r\n    background:\"rgb(0 0 0 / 8%)\" \r\n   }\r\n   \r\n  }));\r\n\r\n//Check previous component propriety and add it ()\r\nconst Message = ({message : {sender, text, img, createdAt}, name }) => {\r\n    const classes = useStyles();\r\n    const [senderUser , setSenderUser] = useState({})\r\n/* Get User */\r\n    useEffect(()=>{\r\n        const id = sender\r\n        getUser(id)\r\n        .then( response => {\r\n        setSenderUser(response)\r\n        })\r\n    },[sender]);\r\n\r\n    let isSentByCurrentUser = false;\r\n    const trimmedName = name.trim().toLowerCase();\r\n    if(senderUser.nickname === trimmedName ){\r\n        isSentByCurrentUser = true ;\r\n    }\r\n    //Base on variable sentbycurrent we ll send thing differently\r\n\r\n//console.log('text',text)\r\n\r\nreturn (\r\n    /* if */ isSentByCurrentUser ?\r\n    (\r\n    /*\r\n        <div className=\"messageContainer justifyEnd\">\r\n            <p className=\"sentText pr-10\">{name}</p>\r\n            <div className=\"messageBox backgroundBlue\">\r\n                <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text) }</p>\r\n            </div>\r\n        </div>// render somthing*/\r\n\r\n\r\n    <Grid container >\r\n        <Grid item xs={12}    >\r\n            <ListItemText  align=\"right\" primary={\r\n                <Typography className={classes.Usertext} >\r\n                    { ReactEmoji.emojify(text) }\r\n                    { img !== undefined &&                     \r\n                    <img src={ \"/uploads/\"+sender +\"/\" +  img  }   alt=\"\" />               }\r\n                </Typography>\r\n                \r\n            }></ListItemText>\r\n            \r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <ListItemText align=\"right\" secondary={createdAt}></ListItemText>\r\n        </Grid>\r\n    </Grid>\r\n\r\n\r\n\r\n    )\r\n    : /* not => */\r\n    (\r\n       /* \r\n        <div className=\"messageContainer justifyStart\">\r\n        <div className=\"messageBox backgroundLight\">\r\n            <p className=\"messageText colorDark\">{text}</p>\r\n        </div>\r\n        <p className=\"sentText pl-10\">{senderUser.nickname}</p>\r\n    </div>*/\r\n\r\n\r\n    <Grid container>\r\n        <Grid item xs={12}>\r\n            <ListItemText align=\"left\" primary={ \r\n                <Typography className={classes.text} > \r\n                    {   ReactEmoji.emojify(text) } \r\n                    { img !== undefined &&   <img src={ \"/uploads/\"+sender +\"/\" +  img  }   alt=\"\" />  }\r\n                </Typography>}>\r\n            </ListItemText>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <ListItemText align=\"left\" secondary={createdAt}></ListItemText>\r\n        </Grid>\r\n    </Grid>\r\n\r\n\r\n    )\r\n)\r\n\r\n}\r\n// logic + variable = {} for render only ()\r\nexport default Message;","import React, {useEffect,useRef} from 'react';\r\nimport Message from '../Message/Message';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\n\r\n//Send et set undefined how to receive ? need to be pass as proprieties\r\n// les def ds le chat comp puis ajouter {} ds input\r\nconst Messages = ({messages, name, oldMessage  }) => {\r\n\r\n  const scrollRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    scrollRef.current.scrollIntoView({\r\n    behavior: \"smooth\",\r\n    });\r\n};\r\n\r\n  useEffect(() => {\r\n   scrollToBottom()\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n   scrollToBottom()\r\n  }, [messages,oldMessage  ]);\r\n  \r\nreturn  (\r\n\r\n  <List  >\r\n   {/* scroll and then loop thrue the message for this need to go back to chat.js*/}\r\n  \r\n  {oldMessage.map((message,i)  =>  <ListItem  key={i}><Message message={message}  name={name} /></ListItem >)}\r\n\r\n  {messages.map((message,i) => <ListItem key={i}><Message  message={message}   name={name} /></ListItem>)}\r\n{/*   Message separate component need  some parameter */ }\r\n  <ListItem ref={scrollRef} >  </ListItem>\r\n  </List>\r\n\r\n)}\r\n\r\nexport default Messages;","import React, { useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\n/*      EMOJI MART       */\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { Picker } from 'emoji-mart'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    width: \"fit-content\",\r\n    flexShrink: 0,\r\n  },\r\n    drawerPaper: {\r\n      width: \"fit-content\",\r\n    },\r\n  \r\n  }));\r\n  \r\n\r\nexport default function InputEmo({addEmoji}) {\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n  const [state, setState] = useState(false);\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n  \r\n\r\n   \r\n\r\n  return (\r\n  \r\n<div>\r\n\r\n\r\n{[ 'bottom'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <IconButton aria-label=\"upload picture\" component=\"span\"\r\n          onClick={toggleDrawer(anchor, true)} >\r\n\r\n            <InsertEmoticonIcon/>\r\n          </IconButton>\r\n\r\n          <Drawer anchor=\"bottom\" open={state[anchor]} onClose={toggleDrawer(anchor, false)}\r\n          classesname={classes.drawer}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n           >\r\n      \r\n          <Picker onSelect={addEmoji} \r\n                title='Pick your emoji…'\r\n               \r\n                set='apple'\r\n                  />\r\n\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n\r\n</div>\r\n  );\r\n}","import React, { useEffect, useState, useContext } from  'react';\r\n\r\n/*SOCKET IO */ \r\nimport io from 'socket.io-client';\r\n\r\n/**/\r\nimport {  useParams } from 'react-router-dom';\r\nimport {  authContext } from '../../../App';\r\n\r\n/*CSS BASE */\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n/* AVATAR */ \r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport {getUser} from '../../../function/GetUser';\r\nimport AvatarUser from '../../AvatarUser';\r\n\r\n/*MESSAGES*/\r\nimport Messages from '../Messages/Messages';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InputChat from '../Input/InputChat';\r\nimport InputPicture from '../Input/InputPicture';\r\n\r\n\r\n/* INPUT */\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n\r\n\r\nlet socket;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '80vh'\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  topSection:{\r\n   \r\n  },\r\n  messageSection:{\r\n      height: '55vh',\r\n    overflow: 'auto'\r\n  },\r\n  inputSection:{\r\n   \r\n    padding: '8px 0px 0px',\r\n\r\n  }\r\n \r\n}));\r\n\r\nconst Chat = () => {\r\n  const classes = useStyles();\r\n  let params = useParams();\r\n  const {  state: authState }  = useContext(authContext);\r\n\r\n  const sender = authState.user._id;\r\n  const receiver = params.id;\r\n  const name = authState.user.nickname;\r\n /* SOCKET IO */ \r\n const ENDPOINT = 'http://localhost:5000';\r\n\r\n  const [receiverUser, setReceiverUser] = useState({});\r\n  const [ textMsg, setTextMsg] = useState('');\r\n  //const [ img, setImg] = useState();\r\n  const [ messages, setMessages] = useState([]);\r\n  const [ oldMessage, setOldMessage]= useState ([]);\r\n  const [roomId]= useState(params.roomid);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n    setAnchorEl(null);\r\n    };\r\n\r\n  const addEmoji = e => {\r\n    let emoji = e.native;\r\n    setTextMsg( textMsg + emoji );\r\n  };\r\n\r\n/* Get User */\r\nuseEffect(()=>{\r\n  if(receiver !== undefined){\r\n  const id = receiver\r\n  getUser(id)\r\n  .then( response => {\r\n    setReceiverUser(response)\r\n  })}\r\n},[receiver]);\r\n\r\nuseEffect(() => {\r\n    /* STEP 1*/\r\n    /*Check if roomId already exist if not create...*/\r\n\r\n  fetch (`http://localhost:5000/api/room` ,{ \r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${authState.token}`\r\n        },\r\n        body: JSON.stringify({         \r\n        roomid: roomId,\r\n        user1: sender,\r\n        user2: receiver\r\n        })\r\n    })\r\n  .then(res =>  { \r\n    if (res.ok) {\r\n      return res.json();\r\n    } else {\r\n      throw res;\r\n    }\r\n  })  \r\n  .then(resJson => {\r\n  //console.log(\"resJson reponse\",resJson);\r\n  })\r\n  .catch(error => {\r\n    //console.error(\"room already exist\",error);\r\n  })\r\n}, [authState.token,receiver,roomId,sender]);\r\n\r\nuseEffect(()=>{\r\n/* STEP 2 : retrieve historic of message */\r\n  fetch(`http://localhost:5000/api/msghisto/${roomId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: `Bearer ${authState.token}`\r\n    }\r\n  })\r\n  .then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    } else {\r\n      throw res;\r\n    }\r\n  })\r\n  .then(resJson => {\r\n    setOldMessage(resJson);\r\n  })\r\n  .catch(error => {\r\n    console.log(error);\r\n  });\r\n\r\n  \r\n}, [authState.token,roomId]);\r\n\r\n\r\nuseEffect(() => {  \r\n  /* STEP 3 : Socket Io Init */\r\n  socket = io(ENDPOINT); \r\n  //console.log('roomId',roomId);\r\n    socket.emit('join',{roomId,sender}, (error) => {\r\n      if(error){\r\n          alert(error);\r\n      }\r\n    }); \r\n    return  ()=>{\r\n      socket.emit('leave',{roomId,sender}, (error)=>{\r\n        if(error){\r\n          alert(error);\r\n        }\r\n      })\r\n    }\r\n }, [roomId,sender]);\r\n\r\n\r\n useEffect(() => {\r\n  socket.on('message', message => {\r\n    setMessages(messages => [ ...messages, message ]);\r\n    console.log('messages',messages,'message',message);\r\n  }); \r\n\r\n  socket.on('image', message =>{\r\n    console.log(\"Recepetion\",'messages',messages,'message',message)\r\n    setMessages(messages => [...messages,  message] );\r\n    //setImg(message.image)\r\n\r\n  }\r\n  ) ;\r\n  //console.log(\"step4\",'messages:',messages)\r\n}, [messages]);\r\n\r\n\r\n\r\n\r\n/* SEND MESSAGE */\r\n\r\nconst sendImg = (e) => {\r\n  e.preventDefault();\r\n\r\n /*Send on socket io and save in db*/ \r\n  const img = e.target.files[0];\r\nconsole.log(\"step1\")\r\n /* save file */ \r\n  const MyformData = new FormData();\r\n  MyformData.append('img', img);\r\n\r\n  fetch(`http://localhost:5000/api/chat/img/${sender}`, {\r\n    method: 'PUT',\r\n    body: MyformData\r\n  })\r\n.then(res => {\r\n  if (res.ok) {\r\n    return res.json();\r\n   }\r\n    throw res;   \r\n})\r\n.then(resJson => {\r\n  console.log(\"EMIT\", resJson);\r\n  alert(\"img is successfully Updated\");\r\n  socket.emit('sendImage',sender,receiver,roomId, resJson.name);\r\n})\r\n .catch(error => {\r\n  console.error(error);\r\n});\r\n\r\n};\r\n\r\nconst sendMessage = (event) => {\r\n  event.preventDefault();   // for not refreshing the all page again and afain\r\n  if(textMsg ){\r\n//console.log(\"type text \")\r\n     socket.emit('sendMessage', sender,receiver,textMsg,roomId, () => setTextMsg(''));\r\n  } \r\n};\r\n\r\n\r\n\r\nreturn(\r\n\r\n<Container maxWidth=\"sm\"  className={classes.root}>\r\n\r\n\r\n\r\n\r\n {/*****TOP SECTION *******/ }\r\n  <Grid container  spacing={1} className={classes.topSection} >\r\n    <Grid item xs={2} >\r\n      <IconButton\r\n        aria-label=\"back\"\r\n        size=\"medium\"\r\n        onClick={() => {  }}\r\n        component={Link}  \r\n        to=\"/mailbox\"\r\n        label=\"Messages\" \r\n      >\r\n        <ArrowBackIosIcon color=\"action\" />\r\n      </IconButton>\r\n    </Grid>\r\n    <Grid item xs={8}>\r\n    <Typography variant=\"h4\" component=\"h4\">\r\n    {receiverUser.nickname}\r\n    </Typography>\r\n    </Grid>\r\n\r\n    <Grid item  xs={2} >\r\n      <AvatarUser classNameEdit={classes.large} avatar={receiverUser.avatar}  nickname={receiverUser.nickname} online={receiverUser.online}/>\r\n    </Grid>\r\n\r\n  </Grid>\r\n\r\n<Divider />\r\n{/******MESSAGES SECTION ******/}\r\n  <Grid container  className={classes.messageSection}>\r\n    <Messages messages={messages} name={name} oldMessage={oldMessage}/>\r\n  </Grid>\r\n\r\n<Divider />\r\n\r\n{/*******INPUT SECTION *******/}\r\n  <Grid container className={classes.inputSection} >\r\n\r\n        \r\n\r\n    <Grid container  className=\"chatInput\">\r\n      <Grid item xs={2} align=\"left\"><div>\r\n\r\n        <IconButton  \r\n        onClick={handleClick}\r\n        aria-controls=\"simple-menu\" \r\n        aria-haspopup=\"true\"\r\n        aria-label=\"+ Media Menu\" \r\n        component=\"span\">\r\n          <AddIcon/>\r\n        </IconButton>\r\n\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n        >\r\n{/*MICRO */ }\r\n          <MenuItem onClick={handleClose}>Todo Micro</MenuItem>\r\n{/*PICTURE */ }\r\n          <MenuItem onClick={handleClose}>    <InputPicture  sendImg={sendImg}    /></MenuItem>\r\n\r\n        </Menu></div>\r\n      </Grid>\r\n\r\n      <Grid item xs={8}   >\r\n{/*INPUT MSG + EMOJI */ }\r\n        <InputChat addEmoji={addEmoji} setTextMsg={setTextMsg} textMsg={textMsg} sendMessage={sendMessage} />\r\n      </Grid>\r\n{/*SEND */ }\r\n      <Grid item xs={2} align=\"right\">\r\n      <IconButton onClick={sendMessage} aria-label=\"send\"   component=\"span\" color=\"primary\" >\r\n        <SendIcon/>\r\n      </IconButton>\r\n      </Grid>\r\n\r\n    </Grid>\r\n\r\n  </Grid>\r\n\r\n<Divider />   \r\n</Container>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Chat;\r\n","import React from  'react';\r\n\r\nimport MediaMenu from './InputEmo';\r\nimport { Grid } from '@material-ui/core';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\n\r\nconst InputChat = ({sendMessage,setTextMsg, textMsg}) =>  {\r\n\r\n  const addEmoji = e => {\r\n    let emoji = e.native;\r\n    setTextMsg( textMsg + emoji );\r\n  };\r\n\r\n    return(\r\n\r\n<Grid   >\r\n          <OutlinedInput\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          className=\"input\" \r\n          id=\"textMsg\"\r\n          name=\"textMsg\"\r\n          size=\"small\"\r\n          type=\"text\"\r\n          placeholder=\"Aa\"\r\n          value={textMsg} \r\n          onChange={(event) => setTextMsg(event.target.value)} \r\n          onKeyPress={event =>  event.key === 'Enter' ? sendMessage(event) : null  }\r\n          //onkeyup={event => isTyping(event)}\r\n          endAdornment={\r\n\r\n<div> <MediaMenu addEmoji={addEmoji} />  </div>  \r\n          }\r\n         />\r\n  \r\n</Grid>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default InputChat;","import React from  'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Grid } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    }));\r\n\r\nconst InputPicture = ({sendImg}) => {\r\n    const classes = useStyles();\r\n\r\n\r\n    /* \r\n\r\n const addImg = e => {\r\n    e.preventDefault();\r\n    setImg(e.target.files[0]) \r\n    \r\n \r\n   const MyformData = new FormData();\r\n   MyformData.append('img', e.target.files[0]);\r\n\r\n   fetch(`http://localhost:5000/api/img`, {\r\n    method: 'PUT',\r\n    body: MyformData\r\n  })\r\n  .then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n     }\r\n      throw res;   \r\n  })\r\n  .then(resJson => {\r\n    alert(\"img is successfully Updated\");\r\n  })\r\n   .catch(error => {\r\n    console.error(error);\r\n      setImg({\r\n        ...img,\r\n        isSubmitting: false,\r\n        errorMessage: error.message || error.statusText\r\n      });\r\n  });\r\n\r\n   sendMessage(e)\r\n  };*/\r\n\r\n  \r\n\r\n    return(\r\n\r\n        <Grid item > \r\n\r\n        <input accept=\"image/*\" \r\n                name=\"img\"\r\n                onChange={sendImg}\r\n                className={classes.input}\r\n                id=\"icon-button-file\" \r\n                type=\"file\" \r\n                />\r\n        <label htmlFor=\"icon-button-file\">\r\n          <IconButton aria-label=\"upload picture\" component=\"span\">\r\n            <PhotoCamera />\r\n          </IconButton>\r\n        </label>\r\n      </Grid>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default InputPicture ;","import React from 'react';\r\n\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n      paddingTop: theme.spacing(8),\r\n      paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n      //paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1,\r\n    },\r\n    footer: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(6),\r\n    },\r\n  }));\r\n\r\nconst Album = ({album}) => {\r\n    const classes = useStyles();\r\n\r\n    \r\n    return(\r\n      \r\n     \r\n \r\n<div>\r\n               \r\n                <Card className={classes.card}></Card>\r\n\r\n                <CardMedia\r\n                    className={classes.cardMedia}\r\n                    image={\"/uploads/album/\" + album.image}\r\n                  />\r\n                 <CardContent className={classes.cardContent}>\r\n                   <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                     {album.title}\r\n                   </Typography>\r\n                   <Typography>\r\n                     {album.description}\r\n \r\n                   </Typography>\r\n                 </CardContent>\r\n                 <CardActions>\r\n                   <Button size=\"small\" color=\"primary\">\r\n                     View\r\n                   </Button>\r\n\r\n                 </CardActions>\r\n                \r\n\r\n\r\n                 </div>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Album;","import React , {  useState, useContext } from 'react';\r\nimport { authContext } from \"../../App\";\r\nimport * as ACTION_TYPES from '../../store/actions/action_types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { createStyles,  makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { initialState } from \"../../store/reducers/auth_reducer\";\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nconst Friend = ({userId, id}) => {\r\n\r\n  const classes = useStyles();\r\n  const { state: authState, dispatch } = useContext(authContext);\r\n  const [user, setUser] = useState(initialState);\r\n\r\n  const addFriend = (event) => {\r\n        event.preventDefault();\r\n        fetch (`http://localhost:5000/api/user/${id}/friend` ,{ \r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${authState.token}`\r\n        },\r\n        body: JSON.stringify({         \r\n          userId: userId,\r\n        })\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n          }\r\n          throw res;   \r\n      })\r\n      .then(resJson => {\r\n        alert(\"Friend is add to your list\");\r\n        dispatch({ \r\n            type: ACTION_TYPES.USER_INPUT_CHANGE,\r\n            payload: resJson\r\n          })\r\n      })\r\n        .catch(error => {\r\n        console.error(error);\r\n          setUser({\r\n            ...user,\r\n            isSubmitting: false,\r\n            errorMessage: error.message || error.statusText\r\n          });\r\n      });  \r\n  };\r\n\r\n  const removeFriend = (event) => {\r\n      event.preventDefault();\r\n      fetch (`http://localhost:5000/api/user/${id}/friend/${userId}/del` ,{ \r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${authState.token}`\r\n      },\r\n    })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n        }\r\n        throw res;   \r\n    })\r\n    .then(resJson => {\r\n      alert(\"Friend is remove from list\");\r\n      dispatch({ \r\n          type: ACTION_TYPES.USER_INPUT_CHANGE,\r\n          payload: resJson\r\n        })\r\n    })\r\n      .catch(error => {\r\n      console.error(error);\r\n        setUser({\r\n          ...user,\r\n          isSubmitting: false,\r\n          errorMessage: error.message || error.statusText\r\n        });\r\n      });  \r\n  };\r\n\r\n  const friendWith = authState.user.friends.includes(userId); \r\n//console.log(\"friendWith ?\",friendWith)\r\n    return(\r\n\r\n    <div className={classes.root}>\r\n      {friendWith ? \r\n<Button color=\"primary\" onClick={removeFriend} >\r\n   <PersonAddDisabledIcon/>\r\n</Button>\r\n:\r\n<Button variant=\"contained\"  color=\"primary\"  onClick={addFriend} >\r\n  <PersonAddIcon/>\r\n</Button>\r\n    }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Friend ;","import React , { useContext, useState } from 'react';\r\nimport { authContext } from \"../../App\";\r\nimport * as ACTION_TYPES from '../../store/actions/action_types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { createStyles,  makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { initialState } from \"../../store/reducers/auth_reducer\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }),\r\n);\r\n/* {} important because a function */\r\nconst BlockUser= ({userId , id} ) => {\r\n  const classes = useStyles();\r\n\r\n  const { state: authState, dispatch } = useContext(authContext);\r\n\r\n  const [user, setUser] = useState(initialState);\r\n\r\n\r\n  const blockSubmit = (event) => {\r\n      event.preventDefault();\r\n      setUser({\r\n        ...user,\r\n        isSubmitting: true,\r\n        errorMessage: null\r\n      });\r\n      fetch (`http://localhost:5000/api/user/${id}/block` ,{ \r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${authState.token}`\r\n      },\r\n      body: JSON.stringify({         \r\n        userId : userId ,\r\n      })\r\n    })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n        }\r\n        throw res;   \r\n    })\r\n    .then(resJson => {\r\n      //alert(\"User is block\");\r\n      dispatch({ \r\n          type: ACTION_TYPES.USER_INPUT_CHANGE,\r\n          payload: resJson\r\n        })\r\n    })\r\n      .catch(error => {\r\n//console.error(error);\r\n        setUser({\r\n          ...user,\r\n          isSubmitting: false,\r\n          errorMessage: error.message || error.statusText\r\n        });\r\n    });  \r\n  };\r\n\r\n\r\n  const removeBlock = (event) => {\r\n    event.preventDefault();\r\n    setUser({\r\n      ...user,\r\n      isSubmitting: true,\r\n      errorMessage: null\r\n    });\r\n    fetch (`http://localhost:5000/api/user/${id}/block/${userId}/del` ,{ \r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${authState.token}`\r\n    },\r\n  })\r\n  .then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n      }\r\n      throw res;   \r\n  })\r\n  .then(resJson => {\r\n//console.log(\"res\",resJson)\r\n    //alert(\"User is  not block\");\r\n    dispatch({ \r\n        type: ACTION_TYPES.USER_INPUT_CHANGE,\r\n        payload: resJson\r\n      })\r\n  })\r\n    .catch(error => {\r\n    console.error(error);\r\n      setUser({\r\n        ...user,\r\n        isSubmitting: false,\r\n        errorMessage: error.message || error.statusText\r\n      });\r\n  });  \r\n};\r\n\r\n  const isBlocked = authState.user.blocked.includes(userId)\r\n//console.log(\"user\", authState.user.blocked , isBlocked );\r\n\r\n    return(\r\n\r\n<div className={classes.root}>\r\n\r\n{isBlocked ? \r\n<Button variant=\"contained\" color=\"secondary\" onClick={removeBlock} >\r\n  UnBlock User\r\n</Button>\r\n:\r\n<Button variant=\"contained\" color=\"secondary\" onClick={blockSubmit} >\r\n  Block User\r\n</Button>\r\n}\r\n</div>\r\n    \r\n    )\r\n}\r\n\r\nexport default BlockUser;","import React , {useState,useEffect,useContext}  from 'react';\r\nimport { authContext } from \"../App\";\r\nimport {  useParams, Link } from 'react-router-dom';\r\n\r\nimport Album from './Album';\r\nimport Lang from './Lang';\r\nimport Friend from './Friend/Friend';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\n\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport Button from '@material-ui/core/Button';\r\nimport BlockUser from './BlockUser/BlockUser';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\n/* UUID FOR CHATID*/\r\nimport {checkRoom} from '../function/CheckRoom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    minWidth: '288px',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nconst initState = {\r\n  userProfile: [],\r\n  isFetching: false,\r\n  hasError: false\r\n};\r\n\r\nconst Profile = () => {\r\n  const classes = useStyles();\r\n\r\n  const { state: authState  } = useContext(authContext);\r\n  const id = authState.user._id;\r\n  //const [user, setUser] = useState(initialState);\r\n  const [userProfile, setUserProfile] = useState(initState);\r\n  const [room,setRoom] = useState('');\r\n  \r\n  let params = useParams();\r\n  const idProfile = params.id ;\r\n\r\n  /* MATCH */\r\n\r\n  const [isMatch, setIsMatch] = useState(false);\r\n  const friendWith = authState.user.friends.includes(idProfile); \r\n  const friendBy = authState.user.friendsby.includes(idProfile);\r\n\r\n  useEffect(()  =>  {\r\n    if( friendWith === true && friendBy === true){\r\n      setIsMatch(true)\r\n    }\r\n    },[authState.token,friendBy,friendWith]);\r\n\r\n\r\n  /****** CHECK ROOM ********/ \r\n  useEffect(()=>{\r\n    checkRoom( id, idProfile  )\r\n    .then(resJson => {\r\n//console.log(\"resJson\",resJson)\r\n    setRoom(resJson.roomid); \r\n    })\r\n    .catch(error => {\r\n    console.error(\"room not found\",error);\r\n    setRoom(uuidv4())\r\n    })  \r\n},[authState.token,id,idProfile ]);\r\n\r\n//console.log(\"room\",room)\r\n  \r\n        useEffect(() => {\r\n          fetch(`http://localhost:5000/api/user/${idProfile}`, {\r\n            method: \"GET\",\r\n            headers: {  }\r\n          })\r\n          .then(res => {\r\n              if (res.ok) {\r\n                //console.log('res',res)\r\n                return res.json();\r\n              } else {\r\n                throw res;\r\n              }\r\n            })\r\n            .then(resJson => {\r\n             setUserProfile(  resJson );\r\n            })\r\n            .catch(error => {\r\n              console.log(error);\r\n            });\r\n            \r\n        },[idProfile,authState.token]);\r\n\r\n  /*      <Link    to=\"/editAlbum/:id\" >\r\n        <Button variant=\"contained\" color=\"primary\">\r\n       <EditIcon/>\r\n        </Button>\r\n      </Link> */\r\n\r\n      return(\r\n\r\n<Container component=\"main\" maxWidth=\"xs\">\r\n{userProfile.isFetching ? (\r\n<span className=\"loader\">LOADING...</span>\r\n) : userProfile.hasError ? (\r\n<span className=\"error\">AN ERROR HAS OCCURED</span>\r\n) : (\r\n<>\r\n\r\n<Grid container alignItems=\"center\" maxwidth=\"sm\">\r\n\r\n\r\n{/*userProfile.albums.map((album) => ())\r\nvar last_element = my_array[my_array.length - 1] */\r\n}\r\n\r\n<Container component=\"main\" maxWidth=\"xs\">\r\n<Card className={classes.card}>\r\n<CardMedia\r\nclassName={classes.cardMedia}\r\nimage= {\"/uploads/\"+authState.user._id+\"/\"+ authState.user.avatar}\r\ntitle=\"Image title\"\r\n/>\r\n\r\n<CardContent>       \r\n<Grid container justify=\"center\" >\r\n{userProfile.languages && \r\nuserProfile.languages.map(language => (            \r\n<Lang key={language._id.toString()} language={language} />\r\n))}\r\n</Grid>\r\n\r\n        \r\n<Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n{userProfile.nickname}\r\n</Typography>\r\n\r\n\r\n<Grid container >\r\n<Grid item ><PlaceIcon  aria-hidden=\"true\" fontSize=\"small\" /></Grid>\r\n\r\n<Grid item >  <Typography >{ userProfile.city!== undefined && userProfile.city.name}</Typography></Grid>\r\n</Grid>\r\n\r\n\r\n\r\n\r\n<Typography>\r\n{userProfile.gender} {userProfile.age} y.o\r\n</Typography>\r\n\r\n\r\n\r\n<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n{userProfile.description}\r\n</Typography>\r\n\r\n\r\n\r\n</CardContent>\r\n\r\n<CardActions> \r\n\r\n  { isMatch &&\r\n\r\n  <Link onClick={ e => (!userProfile._id) ? e.preventDefault() : null} to={`/chat/${room}/${userProfile._id}`}>\r\n  {/* as no first message random id*/}\r\n  <Button   startIcon={<ChatIcon/>}  className={classes.button}  color=\"primary\">\r\n    Message\r\n  </Button >\r\n</Link>\r\n\r\n  }\r\n\r\n<Link    to=\"/editAlbum/:id\" >\r\n<Friend  id={id} userId={userProfile._id} />\r\n</Link> \r\n\r\n</CardActions>\r\n      \r\n    </Card>\r\n    </Container>\r\n</Grid>\r\n\r\n  {userProfile.albums && userProfile.albums.map(album => {\r\nreturn <Album key={album._id.toString()} album={album} />\r\n})}\r\n\r\n\r\n\r\n\r\n<BlockUser    userId={userProfile._id} id={authState.user._id} />\r\n\r\n\r\n</>\r\n\r\n)}\r\n\r\n</Container>\r\n    );\r\n};\r\nexport default Profile;\r\n\r\n\r\n\r\n","export function checkRoom(id, idProfile){\r\nreturn  fetch(`http://localhost:5000/api/room/${id}&${idProfile}` ,{ \r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n})\r\n.then(res =>  { \r\nif (res.ok) {\r\n  return res.json();\r\n} else {\r\n  throw res;\r\n}\r\n})  \r\n}","import React , { useContext, useState } from \"react\";\r\nimport { authContext } from \"../../../App\";\r\nimport * as ACTION_TYPES from '../../../store/actions/action_types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles((theme) => ({ \r\n\r\n}));\r\n\r\nconst initialState = {\r\n  title : \"\",\r\n  description: \"\", \r\n}\r\nconst CreateAlbum = () => {\r\n  const classes = useStyles();\r\n  const { state: authState , dispatch } = useContext(authContext);\r\n  const id = authState.user._id;\r\n  const [data, setAlbum] = useState(initialState);\r\n\r\n  \r\n  const [open, setOpen] = useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n\r\nconst handleInputChange = event => { \r\n  setAlbum({\r\n    ...data,\r\n    [event.target.name]: event.target.value\r\n  }); \r\n};\r\n\r\nconst handleCreate = (event) => {\r\n  event.preventDefault();\r\n  setAlbum({\r\n    ...data,\r\n    isSubmitting: true,\r\n    errorMessage: null\r\n  });\r\n  fetch (`http://localhost:5000/api/user/${id}/albums` ,{ \r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${authState.token}`\r\n  },\r\n    body: JSON.stringify({ \r\n      albums: {        \r\n      title: data.title,\r\n      description: data.description }  \r\n    })\r\n  })\r\n  .then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n      throw res;   \r\n  })\r\n  .then(resJson => {\r\n    alert(\"Album is successfully created\");\r\n    dispatch({ \r\n      type: ACTION_TYPES.USER_INPUT_CHANGE,\r\n      payload: resJson\r\n    })\r\n  })\r\n  .catch(error => {\r\n    console.error(error);\r\n      setAlbum({\r\n        ...data,\r\n        isSubmitting: false,\r\n        errorMessage: error.message || error.statusText\r\n      });\r\n  });\r\nreturn handleClose()\r\n};   \r\n  return(\r\n    <div className=\"\" >\r\n      \r\n      <Button variant=\"contained\" color=\"primary\"   onClick={handleClickOpen}  >\r\n                  <AddIcon />\r\n                  </Button>\r\n\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n       \r\n<form onSubmit={handleCreate}>\r\n<DialogTitle id=\"form-dialog-title\">New Album</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n           To create new album, please enter your title here.\r\n          </DialogContentText>\r\n          \r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            label=\"title\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={data.title}\r\n            onChange={handleInputChange}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            name=\"description\"\r\n            label=\"description\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={data.description}\r\n            onChange={handleInputChange}\r\n          />\r\n          \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleCreate } color=\"primary\">\r\n           Create\r\n          </Button>\r\n        </DialogActions>\r\n\r\n</form>\r\n</Dialog>\r\n</div>\r\n\r\n  )\r\n}\r\n\r\nexport default CreateAlbum ; ","import React , { useContext, useState } from \"react\";\r\nimport { authContext } from \"../../../App\";\r\nimport * as ACTION_TYPES from '../../../store/actions/action_types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme) =>({}));\r\nconst initialState = {\r\n    title : \"\",\r\n    description: \"\", \r\n  }\r\n\r\nexport const EditAlbum = ({album}) => {\r\n\r\n  const classes = useStyles();\r\n  const { state: authState , dispatch } = useContext(authContext);\r\n  const id = authState.user._id;\r\n  const [data, setAlbum] = useState(initialState);\r\n  const [open, setOpen] = useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\nconst handleInputChange = event => { \r\n  setAlbum({\r\n    ...data,\r\n    [event.target.name]: event.target.value\r\n  }); \r\n};\r\n\r\nconst handleEditAlbum = (e) => {\r\n  e.preventDefault();\r\n\r\n  fetch (`http://localhost:5000/api/user/${id}/album/${album._id}` ,{ \r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${authState.token}`\r\n  },\r\n    body: JSON.stringify({     \r\n      title: data.title,\r\n      description: data.description  \r\n    })\r\n  })\r\n  .then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n      throw res;   \r\n  })\r\n  .then(resJson => {\r\n    alert(\"Album is successfully Edit\");\r\n    dispatch({ \r\n      type: ACTION_TYPES.USER_INPUT_CHANGE,\r\n      payload: resJson\r\n    })\r\n  })\r\n  .catch(error => {\r\n    console.error(error);\r\n    setAlbum({\r\n      ...data,\r\n      isSubmitting: false,\r\n      errorMessage: error.message || error.statusText\r\n    });\r\n  });\r\n\r\nreturn handleClose()\r\n};   \r\n\r\nconst handleDeleteAlbum = (e) => {\r\n  e.preventDefault();\r\n\r\n \r\n  fetch (`http://localhost:5000/api/user/${id}/albums/${album._id}/del` ,{ \r\n    method: \"GET\",\r\n    headers: {          \r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${authState.token}`          },\r\n  })\r\n  .then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n      }\r\n      throw res;   \r\n  })\r\n  .then(resJson => {\r\n    dispatch({ \r\n      type: ACTION_TYPES.USER_INPUT_CHANGE,\r\n      payload: resJson\r\n    })\r\n  })\r\n  .catch(error => {\r\n    console.error(error);\r\n    \r\n  });\r\n  return handleClose()\r\n};\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n\r\n<Button variant=\"contained\" color=\"primary\"  onClick={handleClickOpen}>\r\n                 <EditIcon/>\r\n                  </Button>\r\n    \r\n\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n      \r\n\r\n\r\n<form onSubmit={handleEditAlbum}>\r\n<DialogTitle id=\"form-dialog-title\">Edit Album</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n           To Edit new album, please change below.\r\n          </DialogContentText>\r\n          \r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            label=\"title\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={data.title}\r\n            onChange={handleInputChange}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            name=\"description\"\r\n            label=\"description\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={data.description}\r\n            onChange={handleInputChange}\r\n          />\r\n          \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          \r\n          <Button  onClick={(e)=>handleDeleteAlbum(e,album,data)} color=\"primary\">\r\n                    <DeleteIcon/>\r\n          </Button>\r\n\r\n          <Button variant=\"contained\" onClick={(e) => handleEditAlbum(e,album,data)} color=\"primary\">\r\n           Edit\r\n          </Button>\r\n\r\n        </DialogActions>\r\n\r\n</form>\r\n\r\n\r\n\r\n</Dialog>\r\n\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default EditAlbum;","import React, { useState , useContext} from 'react';\r\nimport axios from 'axios';\r\nimport { authContext } from \"../../../App\";\r\nimport * as ACTION_TYPES from '../../../store/actions/action_types';\r\n\r\n\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) =>({}));\r\n\r\nexport const AddImage = ({album}) => {\r\n  const classes = useStyles();\r\n  const { state: authState , dispatch} = useContext(authContext);\r\n  const id = authState.user._id;    \r\n  const [img, setImg] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const handleChange = e => {\r\n\r\n    setData(e.target.files)\r\n\r\n         for (var i = 0; i < e.target.files.length; i++)  //for multiple files\r\n    { \r\n      if (e.target.files.length > 0) {\r\n          let reader = new FileReader();\r\n      \r\n          reader.addEventListener(\"load\", () => {\r\n            setImg(reader.result);\r\n          });\r\n   \r\n          reader.readAsDataURL(e.target.files[i]);\r\n           }  \r\n    }  \r\n  };\r\n  \r\n  //if not react function MIN\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n\r\n    const MyformData = new FormData();\r\n      \r\n    for (let i = 0; i < data.length; i++) {\r\n//console.log(data[i].name);\r\n      MyformData.append('file', data[i])\r\n    }\r\n\r\n    axios.post(`http://localhost:5000/api/user/${id}/album/${album._id}/`, MyformData)\r\n      .then((result) => { alert(\"The files are successfully uploaded\")\r\n       /* dispatch({ \r\n          type: ACTION_TYPES.USER_INPUT_CHANGE,\r\n          payload: result\r\n        })*/\r\n      });\r\n      \r\n    \r\n\r\n\r\n  return handleClose()\r\n  }\r\n\r\n    \r\n  /*function Preview({ img }) {\r\n    console.log(img);\r\n    if (!img) {\r\n      return null;\r\n    }\r\n    return <img src={img} alt=\"\" />;\r\n  }*/\r\n\r\n  //<Preview img={img} /> \r\n\r\nreturn (\r\n<div>\r\n\r\n  <Button variant=\"contained\" onClick={handleClickOpen} color=\"primary\">\r\n      <PhotoCameraIcon/>\r\n  </Button>\r\n\r\n  <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n  <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n\r\n\r\n      <DialogTitle id=\"form-dialog-title\">Add picture</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText>\r\n                 To add picture new album, please select below.\r\n                </DialogContentText>\r\n                \r\n\r\n                {img && <img src={img} alt=\"\" />}\r\n      \r\n      <input\r\n        type=\"file\"\r\n        name=\"file\"\r\n        onChange={handleChange}\r\n         multiple\r\n      />\r\n                \r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n        \r\n                <Button variant=\"contained\" onClick={handleSubmit} color=\"primary\">\r\n                 Submit\r\n                </Button>\r\n      \r\n              </DialogActions>\r\n      \r\n      </form>\r\n      \r\n      \r\n      \r\n      </Dialog>\r\n</div>\r\n);\r\n};\r\n\r\nexport default AddImage ;\r\n\r\n","import React, { useState } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport CreateAlbum from './CreateAlbum';\r\nimport EditAlbum from './EditAlbum';\r\nimport AddImage from './AddImage';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n      paddingTop: theme.spacing(8),\r\n      paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1,\r\n    },\r\n    footer: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(6),\r\n    },\r\n  }));\r\n\r\n\r\n\r\nconst Albums = ({albums}) => {\r\n  const classes = useStyles();\r\n     return(\r\n<main>      \r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n              My Album layout\r\n            </Typography>\r\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n              Create and edit album.\r\n            </Typography>\r\n            <div className={classes.heroButtons}>\r\n              <Grid container spacing={2} justify=\"center\">\r\n\r\n                <Grid item>\r\n\r\n       <CreateAlbum  />\r\n\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button variant=\"outlined\" color=\"primary\">\r\n                    Secondary action TODO \r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          {/* End hero unit */}\r\n          <Grid container spacing={4}>\r\n            {albums.map((album) => (\r\n              <Grid item key={album._id} xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <CardMedia\r\n                    className={classes.cardMedia}\r\n                    image=\"https://source.unsplash.com/random\"\r\n                    title=\"Image title\"\r\n                  />\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {album.title}\r\n                    </Typography>\r\n                    <Typography>\r\n                     {album.description}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>  \r\n                            \r\n       <EditAlbum album={album} />\r\n            \r\n\r\n         <AddImage album={album}   />        \r\n\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n\r\n    )\r\n}\r\n\r\nexport default Albums;","import React, { useState , useContext} from 'react';\r\nimport { authContext } from \"../../App\";\r\n\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { FormControl } from '@material-ui/core';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"fit-content\",\r\n    float: \"right\",\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },  \r\n  input: {\r\n    display: 'none',\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  label:{\r\n    marginBottom: \"-7px\"\r\n  }\r\n}));\r\n\r\nexport const AddAvatar = ({user , setAvatarData, HandleAvatarSubmit}) => {\r\n  const classes = useStyles();\r\n\r\n  const { state: authState, dispatch } = useContext(authContext);\r\n  const id = authState.user._id;\r\n  \r\n  const avatar = authState.user.avatar;  \r\n  \r\n  const [img, setImg] = useState(null);\r\n \r\n  const url = `/uploads/`+id +`/` + avatar;\r\n \r\n\r\n\r\n  const handleChange = e => {\r\n     \r\n      setAvatarData(\r\n          e.target.files[0] \r\n         );\r\n\r\n         if (e.target.files.length > 0) {\r\n          const reader = new FileReader();\r\n          reader.addEventListener(\"load\", () => {\r\n            setImg(reader.result);\r\n          });\r\n          reader.readAsDataURL(e.target.files[0]);\r\n        }      \r\n  };\r\n\r\n \r\nfunction Preview({ img }) {\r\n  if (!img) {\r\n    return null;\r\n  }\r\n  return <Avatar src={img} alt={authState.user.nickname} className={classes.large} />\r\n  }\r\n\r\n\r\n\r\nreturn (\r\n  \r\n  \r\n    <Grid className={classes.root} > \r\n    <FormControl onSubmit={HandleAvatarSubmit}>\r\n\r\n  <Fab color=\"primary\"  aria-label=\"picture select\"  className={classes.fab}>\r\n    <label htmlFor=\"icon-button-file\" >\r\n    <input accept=\"image/*\" \r\n            name=\"avatar\"\r\n            onChange={handleChange}\r\n            className={classes.input}\r\n            id=\"icon-button-file\" \r\n            type=\"file\" \r\n            />\r\n      <PhotoCamera className={classes.label} /> \r\n    </label> </Fab>  \r\n     \r\n   \r\n  </FormControl> \r\n  \r\n { img!== null &&\r\n  <Grid item >   \r\n    Preview :\r\n    <Preview img={img} />\r\n    <Button className={classes.button}  type=\"submit\" variant=\"contained\" color=\"primary\" >Submit</Button>\r\n  </Grid> \r\n  }\r\n\r\n </Grid>\r\n  \r\n \r\n\r\n);\r\n\r\n};\r\n\r\n\r\nexport default AddAvatar ;\r\n\r\n\r\n\r\n\r\n","import React  from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\r\n\r\nconst useStyles = makeStyles((theme) => \r\n    createStyles({\r\n        root: {\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          flexWrap: 'wrap',\r\n          listStyle: 'none',\r\n          padding: theme.spacing(0.5),\r\n          margin: 0,\r\n        },\r\n        chip: {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n}));\r\n\r\nconst LangsUser = ( {handleDelete,languages} ) => {\r\n    const classes = useStyles();\r\n    \r\n    return(\r\n      <div className={classes.root}>\r\n   \r\n        {   languages.map((language) => {\r\n            let icon;\r\n            if (language.nativName === 'React') {\r\n                icon = <TagFacesIcon />;\r\n              }\r\n        \r\n        return( \r\n\r\n            <li key={language._id.toString()}>\r\n\r\n                <Chip\r\n              icon={icon}\r\n              label={language.nativName}\r\n              variant=\"outlined\" \r\n              /*onDelete={(e) => onDelete(  language, e ) }*/\r\n              onDelete={(e) => handleDelete(language._id,e)}\r\n              className={classes.chip}\r\n                />  \r\n\r\n            </li>\r\n\r\n        );\r\n        })}\r\n \r\n \r\n       </div>    \r\n    )\r\n}\r\n\r\nexport default LangsUser ;","import React, { useState , useEffect, useContext} from \"react\";\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {getLangs} from './GetLangs';\r\nimport { authContext } from \"../App\";\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 500,\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function SelectLangs({handleSelectLang }) {\r\n\r\n   //FOR ALL LANG\r\n  const { state: authState } =useContext(authContext);\r\n\r\n  const [langs, setLangs]=useState([])\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  ///SELECT\r\n  const [value, setValue] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n\r\n  const handleChangeMultiple = (event) => {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n\r\n    //setSelectLang(selectlang);\r\n  };\r\n\r\n  useEffect( () => {\r\n    let isSubscribed = true\r\n    getLangs()\r\n      .then( langs => { \r\n        if (isSubscribed) {}\r\n      setLangs(langs);\r\n    });\r\n    setLoading(false);\r\n    return () => isSubscribed = false\r\n    }, [authState.token]);\r\n\r\n  return (\r\n    \r\n    <Container component=\"main\" maxWidth=\"xs\">  \r\n\r\n    {loading ? (\r\n          <span className=\"loader\">LOADING...</span>\r\n        ) : error ? (\r\n          <span className=\"error\">AN ERROR HAS OCCURED</span>\r\n        ) : (\r\n          <>\r\n\r\n<Grid container spacing={1} >\r\n<Grid item xs={8} >\r\n        <Autocomplete\r\n          multiple\r\n          id=\"tags-standard\"\r\n          options={langs}\r\n\r\n          //style={{ width: 300 }}\r\n          //getOptionLabel={  {(option) => option.langue } car ASYNC\r\n          getOptionLabel={(option) => option && option.langue} //if (option !== undefined) { return option.language } \r\n          //defaultValue={}  //defaultValue={[langs[1]].langue}\r\n\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          inputValue={inputValue}\r\n          onInputChange={(event, newInputValue) => {\r\n            setInputValue(newInputValue);\r\n          }}\r\n         \r\n          getOptionSelected={(option, value) =>  option.langue === value.langue   }\r\n\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant=\"standard\"\r\n              label=\"Language\"\r\n              placeholder=\"Languages\"\r\n            />\r\n          )}\r\n        />\r\n        </Grid>\r\n\r\n    <Grid item    >\r\n      <Button \r\n      color=\"primary\"\r\n      variant=\"contained\"\r\n      onClick={(e) => handleSelectLang(e, value)}>Add</Button>\r\n   </Grid>\r\n\r\n\r\n   </Grid>\r\n\r\n          \r\n</>\r\n        )}\r\n \r\n    </Container>\r\n    \r\n  );\r\n};\r\n\r\n","import React , {useContext, useState} from \"react\";\r\nimport { authContext } from \"../../App\";\r\n//import {  useParams } from 'react-router-dom';\r\n//import * as ACTION_TYPES from '../../store/actions/action_types';\r\nimport * as ACTION_TYPES from '../../store/actions/action_types';\r\n\r\n\r\nimport Albums from './Albums/Albums';\r\nimport AddAvatar from \"./AddAvatar\";\r\nimport { initialState } from \"../../store/reducers/auth_reducer\";\r\nimport LangsUser from \"./Langs/LangsUser\";\r\n\r\nimport './Edit.css';\r\nimport { createStyles,  makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport SelectLangs from \"../../function/SelectLangs\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Autocomplete , { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\nimport cities from  '../../function/City/cities.json';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },  \r\n    paper: {\r\n        maxWidth: \"-webkit-fill-available\",\r\n        margin: `${theme.spacing(1)}px auto`,\r\n        padding: theme.spacing(2),\r\n      },\r\n    option: {\r\n        fontSize: 15,\r\n        '& > span': {\r\n          marginRight: 10,\r\n          fontSize: 18,\r\n        },\r\n      }, \r\n      card: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      minWidth: '288px',\r\n    },\r\n    cardMedia: {\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n/* CITY LIMIT*/\r\nconst filterOptions = createFilterOptions({\r\n  limit: 20,\r\n});\r\n\r\n/*Tabs Component */ \r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n\r\n\r\nexport const Edit = () => {    \r\n\r\n  const classes = useStyles();\r\n\r\n  const { state: authState, dispatch } = useContext(authContext);\r\n \r\n  const [user, setUser] = useState(initialState); \r\n  const id = authState.user._id;\r\n  const [city, setCity] = useState(\"\");\r\n  const [avatarData, setAvatarData]= useState(initialState);\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleAppBarChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n\r\n  const [open, setOpen] = useState(false);\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n \r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    setUser({\r\n      ...user,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = (e, selectlang) => {\r\n      e.preventDefault();\r\n      setUser({\r\n        ...user,\r\n        isSubmitting: true,\r\n        errorMessage: null\r\n      });\r\n      fetch (`http://localhost:5000/api/user/${user._id}` ,{ \r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${authState.token}`\r\n      },\r\n      body: JSON.stringify({         \r\n        age: user.age,   \r\n        city: city,\r\n        selectlang: selectlang\r\n      }),  \r\n     \r\n    })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n        }\r\n        throw res;   \r\n    })\r\n    .then(resJson => {\r\n      dispatch({ \r\n          type: ACTION_TYPES.USER_INPUT_CHANGE,\r\n          payload: resJson\r\n        })\r\n    })\r\n      .catch(error => {\r\n      console.error(error);\r\n        setUser({\r\n          ...user,\r\n          isSubmitting: false,\r\n          errorMessage: error.message || error.statusText\r\n        });\r\n    });  \r\n  };\r\n\r\n  const HandleAvatarSubmit = (e) =>{\r\n    e.preventDefault();\r\n\r\n    const MyformData = new FormData();\r\n    MyformData.append('avatar', avatarData);\r\n\r\n    fetch(`http://localhost:5000/api/avatar/user/${id}`, {\r\n     method: 'PUT',\r\n     body: MyformData\r\n   })\r\n   .then(res => {\r\n     if (res.ok) {\r\n       return res.json();\r\n      }\r\n       throw res;   \r\n   })\r\n   .then(resJson => {\r\n     dispatch({ \r\n      type: ACTION_TYPES.USER_INPUT_CHANGE,\r\n      payload: resJson\r\n    })\r\n    setOpen(true);\r\n   })\r\n    .catch(error => {\r\n     console.error(error);\r\n     setUser({\r\n      ...user,\r\n      isSubmitting: false,\r\n      errorMessage: error.message || error.statusText\r\n    });\r\n   });\r\n      \r\n}\r\n/*\r\n  const handleDeleteAlbum = (album, e) => {\r\n      e.preventDefault();\r\n      /*On doit set user pour re afficher le user meme quand on suprime car \r\n      meme si on delete on effectuer une mise a jours une update\r\n      *//*\r\n      setUser({\r\n        ...user,\r\n        isSubmitting: true,\r\n        errorMessage: null\r\n      });\r\n      fetch (`http://localhost:5000/api/user/${id}/albums/${album._id}/del` ,{ \r\n        method: \"GET\",\r\n        headers: {          \r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${authState.token}`          },\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n          }\r\n          throw res;   \r\n      })\r\n      .then(resJson => {\r\n        dispatch({ \r\n          type: ACTION_TYPES.USER_INPUT_CHANGE,\r\n          payload: resJson\r\n        })\r\n        setOpen(true);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n          setUser({\r\n            ...user,\r\n            isSubmitting: false,\r\n            errorMessage: error.message || error.statusText\r\n          });\r\n      });\r\n  };\r\n*/\r\n  /*\r\nconst handleEditAlbum = (e,album, data) => {\r\n  e.preventDefault();\r\n  setUser({\r\n    ...user,\r\n    isSubmitting: true,\r\n    errorMessage: null\r\n  });\r\n \r\n  fetch (`http://localhost:5000/api/user/${id}/album/${album._id}` ,{ \r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${authState.token}`\r\n  },\r\n    body: JSON.stringify({     \r\n      title: data.title,\r\n      description: data.description  \r\n    })\r\n  })\r\n  .then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n      throw res;   \r\n  })\r\n  .then(resJson => {\r\n    alert(\"Album is successfully Edit\");\r\n    dispatch({ \r\n      type: ACTION_TYPES.USER_INPUT_CHANGE,\r\n      payload: resJson\r\n    })\r\n  })\r\n  .catch(error => {\r\n    console.error(error);\r\n    setUser({\r\n      ...user,\r\n      isSubmitting: false,\r\n      errorMessage: error.message || error.statusText\r\n    });\r\n  });\r\nreturn handleClose()\r\n};   \r\n\r\n \r\n*/\r\n  const handleDeleteLang = (languageId, e) => {\r\n    e.preventDefault();\r\n      setUser({\r\n        ...user,\r\n        isSubmitting: true,\r\n        errorMessage: null\r\n    });\r\n    fetch (`http://localhost:5000/api/user/${id}/langs/${languageId}/del` ,{ \r\n      method: \"GET\",\r\n      headers: {          \r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${authState.token}`          },\r\n    })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n        }\r\n        throw res;   \r\n    })\r\n    .then(resJson => {\r\n      dispatch({ \r\n        type: ACTION_TYPES.USER_INPUT_CHANGE,\r\n        payload: resJson\r\n      })\r\n      setOpen(true);\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n        setUser({\r\n          ...user,\r\n          isSubmitting: false,\r\n          errorMessage: error.message || error.statusText\r\n        });\r\n    });\r\n  };\r\n\r\nreturn (\r\n  <Container component=\"main\" maxWidth=\"xs\">\r\n    <Grid container >\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <Card className={classes.card}>\r\n\r\n      <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n  {authState.user.nickname}\r\n  </Typography>\r\n  </Grid> </Grid>\r\n\r\n<CardMedia\r\nclassName={classes.cardMedia}\r\nimage= {\"/uploads/\"+authState.user._id+\"/\"+ authState.user.avatar}\r\ntitle=\"Image title\"\r\n>\r\n  <AddAvatar  setAvatarData={setAvatarData}  HandleAvatarSubmit={HandleAvatarSubmit}   user={user} /> \r\n  </CardMedia>\r\n\r\n{/*<CardContent> </CardContent> */}\r\n\r\n\r\n\r\n\r\n      {/************************ APPBAR *******************/ }\r\n\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleAppBarChange} aria-label=\"simple tabs example\">\r\n          <Tab label=\"Profile\" {...a11yProps(0)} />\r\n          <Tab label=\"Albums\" {...a11yProps(1)} />\r\n          <Tab label=\"Item Three\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n       \r\n      <Grid container spacing={3}>\r\n \r\n        {/**********    LANGUAGE      ***********/}\r\n        <Grid item xs={12}>\r\n            <label htmlFor=\"languages\">\r\n            <LangsUser handleDelete={handleDeleteLang}  languages={authState.user.languages} />\r\n            <SelectLangs handleSelectLang={handleFormSubmit} />     \r\n            </label>\r\n        </Grid>\r\n        \r\n\r\n<FormControl fullWidth={true} onSubmit={handleFormSubmit} className={classes.root} noValidate autoComplete=\"off\">\r\n\r\n      <TextField \r\n       id=\"outlined-basic\" \r\n       variant=\"outlined\" \r\n       type=\"text\"\r\n       value={user.age}\r\n       onChange={handleInputChange}\r\n       label=\"Age\"\r\n       defaultValue={authState.user.age}\r\n       name=\"age\"\r\n        />\r\n\r\n\r\n      <TextField\r\n        id=\"description\"\r\n        name=\"description\"\r\n        label=\"Description\"\r\n        multiline\r\n        rowsMax={4}\r\n        value={user.description}\r\n        onChange={handleInputChange}\r\n        variant=\"outlined\"\r\n      />\r\n{user.errorMessage && (\r\n<span className=\"form-error\">{user.errorMessage}</span>\r\n)}\r\n\r\n{/**********    CITY DISPLAY       ***********/}\r\n\r\n<Autocomplete\r\nid=\"country-select\"\r\noptions={cities}\r\nclasses={{\r\noption: classes.option,\r\n}}\r\nautoHighlight\r\nvalue={authState.user.city}\r\nonChange={(event, newValue) => {\r\nsetCity(newValue);\r\n}}\r\ngetOptionSelected={(option, value) => option.name === value.name}\r\nfilterOptions={filterOptions}\r\ngetOptionLabel={(option) => option.name}\r\nrenderOption={(option) => (\r\n<React.Fragment>\r\n  {option.name} ({option.country}) \r\n</React.Fragment>\r\n)}\r\nrenderInput={(params) => (\r\n<TextField\r\n  {...params}\r\n  id=\"field1\"\r\n  label=\"Choose a city\"\r\n  name=\"field1\" \r\n  variant=\"outlined\"\r\n  inputProps={{\r\n    ...params.inputProps,\r\n    autoComplete: 'off',\r\n    // disable autocomplete and autofill\r\n  }}\r\n/>      )}\r\n/>\r\n\r\n<Button \r\n  variant=\"contained\" \r\n  onClick={handleFormSubmit}\r\n  color=\"primary\"\r\n  >   Update  </Button>        \r\n</FormControl>\r\n\r\n\r\n</Grid>\r\n\r\n\r\n<Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          fetch (`http://localhost:5000/api/user/${id}` ,{ \r\n            method: \"DELETE\",\r\n            headers: {\r\n              Authorization: `Bearer ${authState.token}`\r\n            },\r\n          })//is incorrect, you should dispatch from the click, or manage it in state\r\n          .then( resJson => {\r\n            dispatch({ type: ACTION_TYPES.LOGOUT })\r\n          })}  \r\n        }>Delete Profile</Button>\r\n\r\n\r\n\r\n{/***************** ALBUMS *************************/}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n      <Albums   albums={authState.user.albums}   />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        TODO\r\n      </TabPanel>\r\n\r\n      {/*************************************  ***************************/}\r\n\r\n    \r\n      \r\n\r\n    \r\n      </Card>\r\n</Container>\r\n\r\n\r\n\r\n\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n        User is successfully Updated\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n\r\n      </Grid> \r\n</Container>\r\n);\r\n\r\n\r\n};\r\n\r\nexport default Edit ;","import React, { useEffect, useContext } from 'react';\r\nimport { useIdleTimer } from 'react-idle-timer';\r\nimport {authContext} from '../App';\r\nimport * as ACTION_TYPES from '../store/actions/action_types';\r\nimport axios from 'axios';\r\n\r\n/* SOCKET IO */\r\nimport io from 'socket.io-client';\r\nlet socket;\r\n\r\nconst LogOutTimer = () => {\r\n\r\n  const {  state, dispatch }  = useContext(authContext);\r\n  //const [isIdle, setIsIdle] = useState(false)\r\n\r\n  const handleOnIdle = event => {\r\n    \r\n    //console.log('user is idle', event)\r\n    //console.log('last active', new Date(getLastActiveTime() )  )\r\n    //setIsIdle(true)\r\n\r\n    axios.get('http://localhost:3000/api/logout')\r\n              .then(()=>\r\n              socket.emit('logout',{userId: state.user._id})\r\n              )\r\n              .then(() =>\r\n              dispatch({ type: ACTION_TYPES.LOGOUT })\r\n              )\r\n               \r\n  }\r\n  \r\n  const handleOnActive = event => {\r\n    //console.log('user is active', event)\r\n    //console.log('time remaining', getRemainingTime() / 1000  )\r\n    //setIsIdle(false)\r\n    \r\n  }\r\n\r\n  const handleOnAction = (e) => {\r\n    //console.log('user did something', e, getRemainingTime() / 1000   ) \r\n  }\r\n\r\n \r\n  /* SOCKET IO */ \r\n  const ENDPOINT = 'http://localhost:5000';\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT); \r\n    \r\n      // room and message need to be init BEFORE \r\n  socket.emit('login',{userId: state.user._id})\r\n  return ()=>{\r\n    socket.emit('logout',{userId: state.user._id})\r\n  }\r\n  }, [ENDPOINT,state.user._id]);\r\n\r\n/*const { getRemainingTime, getLastActiveTime  } = */useIdleTimer({\r\n  timeout: 1000 * 60 * 15,\r\n  onIdle: handleOnIdle,\r\n  onActive: handleOnActive,\r\n  onAction: handleOnAction,\r\n  debounce: 500\r\n})\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n     \r\n      </div>\r\n  );\r\n };\r\nexport default LogOutTimer;","import React, { useEffect, useState, useContext } from 'react';\r\nimport {authContext} from '../../App';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\n\r\nimport {getUser} from '../../function/GetUser';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\n\r\n\r\nconst MessageCard = ({message}) => {\r\n    const { state: authState } = useContext(authContext);\r\n    const id = authState.user._id;\r\n    const [user,setUser]=useState({});\r\n\r\n      /* Get User sender */\r\nuseEffect(()=>{\r\n  getUser(message.sender)\r\n  .then( response => {\r\n    setUser(response)\r\n  })\r\n},[message.sender]);\r\n\r\n    let isSentByCurrentUser = false;\r\n    if(message.sender === id ){\r\n        isSentByCurrentUser = true ;\r\n    }\r\n\r\n    //const date = new Date(message.createdAt);\r\n\r\n    //console.log(message)\r\n\r\n    return(\r\n\r\n  /* if */ isSentByCurrentUser ?\r\n  (   \r\n  \r\n      <Grid container   wrap=\"nowrap\"  spacing={2}>\r\n          <Grid item xs = {1} >\r\n              <ReplyIcon fontSize=\"small\"/>\r\n          </Grid>\r\n          <Grid  item xs zeroMinWidth >\r\n          <Typography noWrap > {message.text}</Typography>\r\n          </Grid>\r\n      </Grid>\r\n\r\n  )\r\n\r\n  : /* not => */\r\n  (    \r\n        <Grid container wrap=\"nowrap\" spacing={2} >\r\n            <Grid item  >\r\n                <Typography  ><b>{user.nickname}</b></Typography>\r\n            </Grid>\r\n            <Grid item xs={1}  ><RemoveIcon fontSize=\"small\" color='action'/></Grid> \r\n            <Grid item  zeroMinWidth >\r\n              <Typography noWrap  >{message.text}</Typography>\r\n            </Grid>\r\n        </Grid>\r\n  )   \r\n\r\n       \r\n    )\r\n}\r\n\r\nexport default MessageCard;","import React , { useContext, useState, useEffect }  from 'react';\r\nimport {authContext} from '../../App';\r\nimport {Link} from 'react-router-dom';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport MessageCard from './MessageCard';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport AvatarUser from '../AvatarUser';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nimport {getUser} from '../../function/GetUser';\r\n\r\nconst MailboxCard = ({room}) => {\r\n\r\n  const { state: authState } = useContext(authContext);\r\n  const id = authState.user._id;\r\n  //const [error, setError] = useState(null);\r\n  //const [loading, setLoading] = useState(false);\r\n\r\n\r\n //GET LAST MSG//\r\n const [lastMsg]=useState(room.messages[room.messages.length-1]);\r\n const date = new Date(lastMsg.createdAt);\r\n //console.log('date',date)\r\n //   //\r\n\r\n  const [users]=useState(room.users);\r\n\r\n  // GET AVATAR //\r\n  const toUserFind = users.find( ({_id})  => _id !==id );\r\n  const [toUser, setToUser] = useState([])\r\n\r\n  //console.log(\"to\",toUser._id,toUserFind,room.messages)\r\n\r\n\r\n const [unread]= useState([]);\r\n\r\n  /* Get User toUser */\r\nuseEffect(()=>  { \r\ngetUser(toUserFind._id)\r\n.then(  response   => {\r\n  setToUser(response)\r\n})\r\n\r\n     //UNREAD MESSAGE//\r\n  const connectedUser =   room.users.find( ({_id})  => _id ===id )\r\n\r\n  //console.log(\"date user\", connectedUser.online)\r\n\r\n  room.messages.length >0 && room.messages.map((message)=> {\r\n    const clientDate= new Date(connectedUser.online);\r\n    const messageDate= new Date(message.createdAt);\r\n    if ( clientDate < messageDate){\r\n      //console.log(\"true\",true);\r\n      unread.push( true );\r\n     }\r\n  }) \r\n\r\n  //console.log('unread',unread.length)\r\n \r\n  },[room.users,toUserFind,id,room.messages,unread])\r\n \r\n  return (   \r\n\r\n    lastMsg !== undefined &&\r\n\r\n<div >\r\n   \r\n<ListItem  \r\ncomponent={Link} \r\nbutton\r\nonClick={e => (!room.roomid) ? e.preventDefault() : null} to={`/chat/${room.roomid}/${toUser._id}`}  \r\nalignItems=\"flex-start\"\r\ndivider\r\n  >\r\n        <ListItemAvatar>\r\n\r\n          <AvatarUser  avatar={toUser.avatar} nickname={toUser.nickame} />\r\n\r\n        </ListItemAvatar>\r\n\r\n      <ListItemText\r\n       primary={<MessageCard message={lastMsg}  key={lastMsg._id} />} secondary={ date.toLocaleString() } />\r\n\r\n    {unread.length > 0 &&\r\n    <Badge badgeContent={unread.length} color=\"primary\">\r\n        <MailIcon color='action'/>\r\n      </Badge>}\r\n\r\n</ListItem>\r\n        \r\n  </div>\r\n\r\n  ) \r\n}\r\n\r\n\r\nexport default MailboxCard;\r\n\r\n\r\n\r\n","import React , { useEffect, useContext, useState }  from 'react';\r\nimport {authContext} from '../../App';\r\nimport MailboxCard from './MailboxCard';\r\nimport Container from '@material-ui/core/Container';\r\nimport List from '@material-ui/core/List';\r\n\r\n\r\nconst Mailbox = () => {\r\n\r\n  const { state: authState } = useContext(authContext);\r\n  const id = authState.user._id;\r\n  \r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [rooms ,setRooms] = useState([])\r\n\r\n  useEffect(()=>{\r\n      /*  STEP 1 */\r\n    fetch (`http://localhost:5000/api/room/${id}` ,{ \r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${authState.token}`\r\n    },\r\n  })\r\n  .then(res =>  { \r\n  if (res.ok) {\r\n    return res.json();\r\n  } else {\r\n    throw res;\r\n  }\r\n  })  \r\n  .then(resJson => {\r\n  //console.log(resJson)\r\n  setRooms(resJson); \r\n  setLoading(false)\r\n  })\r\n  .catch(error => {\r\n  console.error(\"room not found\",error);\r\n  setError(error)\r\n  })  \r\n  },  [authState.token,id ]);\r\n\r\n\r\n  \r\n\r\n  return (\r\n\r\n    <Container maxWidth=\"sm\">\r\n      <List >\r\n\r\n{loading ? (\r\n  <span className=\"loader\">LOADING...</span>\r\n): error ? (\r\n  <span className=\"error\">AN ERROR HAS OCCURED</span>\r\n) : (\r\n\r\nrooms.length > 0 &&\r\n            rooms.map((room) => \r\n            //Only display room with message\r\n            room.messages.length > 0 &&   \r\n              <MailboxCard room={room} key={room._id} />\r\n              \r\n        )\r\n)}\r\n        \r\n\r\n      </List>\r\n    </Container>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Mailbox;\r\n\r\n","import React , {useState} from 'react';\r\nimport { Link, useLocation} from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"-webkit-fill-available\",\r\n    flexGrow: 1,\r\n    position : \"fixed\",\r\n    bottom : 0,\r\n  },\r\n});\r\n\r\nconst BottomNav = () => {\r\n \r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(useLocation().pathname);\r\n   \r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n\r\n\r\nreturn  (     \r\n<BottomNavigation value={value} onChange={handleChange} className={classes.root} >\r\n\r\n      <BottomNavigationAction \r\n      component={Link}  to=\"/\"\r\n      label=\"Home\"  value=\"/home\" icon={<HomeIcon />} />\r\n \r\n      <BottomNavigationAction \r\n      component={Link}  to=\"/users\"\r\n      label=\"Users\" value=\"/users\" icon={<GroupIcon />} />\r\n\r\n\r\n      <BottomNavigationAction\r\n      component={Link}  to=\"/mailbox\"\r\n       label=\"Messages\"  value=\"/mailbox\" icon={<EmailIcon/>} />\r\n       \r\n       <BottomNavigationAction\r\n      component={Link}  to=\"/edit\"\r\n       label=\"Profile\"  value=\"/profile\" icon={<AccountCircle/>} />\r\n\r\n    \r\n    </BottomNavigation>\r\n) \r\n\r\n}\r\n\r\nexport default BottomNav;\r\n\r\n","import React , {useContext} from 'react';\r\nimport { authContext } from \"../App\";\r\n\r\nimport BottomNav from './BottomNav/BottomNav';\r\nimport LogOutTimer from '../function/LogOutTimer';\r\n\r\nfunction Auth() {\r\n\r\n  const { state   }  = useContext(authContext);\r\n \r\n return state.is_authenticated ? \r\n \r\n (\r\n   <div className=\"\">\r\n     \r\n      <LogOutTimer />\r\n      <BottomNav />\r\n\r\n   </div>    ) : ( \r\n\r\n    <div className=\"\"></div>   \r\n\r\n   ) \r\n   ;\r\n\r\n}\r\n\r\n\r\nexport default Auth;\r\n\r\n\r\n\r\n\r\n\r\n","import React , {useContext} from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nimport { authContext } from \"../../App\";\r\nimport * as ACTION_TYPES from '../../store/actions/action_types';\r\nimport axios from 'axios';\r\n\r\n\r\n/* SOCKET IO */\r\nimport io from 'socket.io-client';\r\nlet socket;\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(1),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  toolbar: {\r\n    minHeight: 128,\r\n    alignItems: 'flex-start',\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function PersistentDrawerLeft() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const { state, dispatch }  = useContext(authContext);\r\n  const [auth, setAuth] = React.useState(true);\r\n\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const openE1 = Boolean(anchorEl);\r\n\r\n   /* SOCKET IO */ \r\n   const ENDPOINT = 'http://localhost:5000';\r\n   socket = io(ENDPOINT); \r\n\r\n  const handleChange = (event) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return state.is_authenticated ? (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title} /*noWrap*/>\r\n            Worldpal\r\n          </Typography>\r\n          {auth && (\r\n          <div>\r\n            <IconButton\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorEl}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={openE1}\r\n              onClose={handleClose}\r\n            >\r\n              <Link to=\"/edit\" >\r\n              <MenuItem onClick={handleClose} >Profile</MenuItem>\r\n              </Link>\r\n              <MenuItem onClick={handleClose}>My account</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n        {['Deconnection'].map((text, index) => (\r\n          \r\n            <ListItem key={index} button  onClick={() => {\r\n              axios.get('http://localhost:3000/api/logout')\r\n              .then(()=>\r\n              socket.emit('logout',{userId: state.user._id})\r\n              )\r\n              .then(() =>\r\n              dispatch({ type: ACTION_TYPES.LOGOUT })\r\n              )\r\n               }} >\r\n              <ListItemIcon><ExitToAppIcon /></ListItemIcon>\r\n              <ListItemText  primary={text} />\r\n            </ListItem>\r\n\r\n        ))}\r\n        </List>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n       \r\n      </main>\r\n    </div>\r\n  \r\n  ): ( \r\n    <div className=\"\">You are not logged in.\r\n     </div>     ) \r\n    ;\r\n}\r\n","import React , {useState} from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { makeStyles,  createStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n   \r\n  }),\r\n);\r\n\r\nconst initialState = {\r\n    code : \"\",\r\n    submitting: false,\r\n    serverError: null,\r\n}\r\n\r\n\r\nconst CodeForm = (  {handleCodeSubmit}  ) => {\r\n\r\n  const classes = useStyles();\r\n  const [code, setCode] = useState(initialState);\r\n\r\n\r\n  const handleInputChange = event => {\r\n    setCode({\r\n      ...code,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n\r\n        <div>\r\n          \r\n        <Typography component=\"h1\" variant=\"subtitle1\">\r\n        Please provide the code you have receive.\r\n        </Typography>\r\n\r\n        <form onSubmit={(e)=>handleCodeSubmit( code.code, e)}>\r\n        \r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"code\"\r\n                label=\"Code\"\r\n                name=\"code\"\r\n                autoComplete=\"code\"\r\n                autoFocus\r\n                value={code.code}\r\n                onChange={handleInputChange}\r\n            /> \r\n            \r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled={code.isSubmitting}\r\n            >\r\n                {code.isSubmitting ? (\r\n                    \"Processing...\"\r\n                ) : (\r\n                    \"Submit\"\r\n                )}\r\n            </Button>\r\n        \r\n        </form>\r\n        \r\n        </div>\r\n\r\n\r\n        )\r\n    \r\n}\r\n\r\nexport default CodeForm;","import React , {useState} from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles,  createStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n   \r\n  }),\r\n);\r\n\r\nconst EmailForm = ( {handleEmailSubmit} ) => {\r\n    const classes = useStyles();\r\n\r\n    const initialState = {\r\n        email : \"\",\r\n        submitting: false,\r\n        serverError: null,\r\n      }\r\n\r\n    const [userEmail, setEmail] = useState(initialState);\r\n\r\n\r\n      const handleInputChange = event => {\r\n        setEmail({ \r\n          ...userEmail,\r\n          [event.target.name]:  event.target.value}\r\n        );        \r\n      };\r\n\r\n    return ( \r\n\r\n        \r\n<div>\r\n    <Typography variant=\"subtitle1\" >\r\n    Please provide your account email address to request a password reset code. You will receive your a code to your email address if it is valid.\r\n    </Typography>\r\n\r\n    <form onSubmit={(e)=>handleEmailSubmit( userEmail.email, e)}>\r\n\r\n    <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        required\r\n        fullWidth\r\n        id=\"email\"\r\n        label=\"Email Address\"\r\n        name=\"email\"\r\n        autoComplete=\"email\"\r\n        autoFocus\r\n        value={userEmail.email}\r\n        onChange={handleInputChange}\r\n    /> \r\n    \r\n    <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submit}\r\n        disabled={userEmail.isSubmitting}\r\n    >\r\n        {userEmail.isSubmitting ? (\r\n            \"Processing...\"\r\n        ) : (\r\n            \"Send Password Reset Email\"\r\n        )}\r\n    </Button>\r\n\r\n</form>\r\n</div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default EmailForm;","import React , {useState} from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n   \r\n  }),\r\n);\r\n\r\nconst initialState = {\r\n    pswd : \"\",\r\n    submitting: false,\r\n    serverError: null,\r\n}\r\n\r\nconst NewPasswordForm = ({handlePswdSubmit}) => {\r\n    \r\n    const classes = useStyles();\r\n    const [pswd, SetPassword ] = useState(initialState)\r\n\r\n    const handleInputChange = event => {\r\n        SetPassword({\r\n          ...pswd,\r\n          [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n\r\n    return(\r\n        <div>\r\n            <Typography component=\"h1\" variant=\"subtitle1\">\r\n            Please enter new password\r\n            </Typography>\r\n\r\n\r\n            <form onSubmit={(e)=>handlePswdSubmit( pswd.pswd, e)}>\r\n\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"pswd\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                name=\"pswd\"\r\n                autoComplete=\"password\"\r\n                autoFocus\r\n                value={pswd.pswd}\r\n                onChange={handleInputChange}\r\n            /> \r\n\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled={pswd.isSubmitting}\r\n            >\r\n                {pswd.isSubmitting ? (\r\n                    \"Processing...\"\r\n                ) : (\r\n                    \"Submit\"\r\n                )}\r\n            </Button>\r\n\r\n            </form>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPasswordForm ;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(3),\r\n\r\n      },\r\n\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    backButton: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n\r\n      \r\n  }));\r\n\r\n  export default useStyles;","import React , {  useState  } from 'react';\r\nimport CodeForm from './CodeForm';\r\nimport EmailForm from './EmailForm';\r\nimport NewPasswordForm from './NewPasswordForm';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport useStyles from '../../function/UseStyles';\r\nimport Copyright from \"../../function/Copyright\";\r\n\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n/*\r\n 3 stage process\r\n// 1 mail\r\n// 2 code receive by mail\r\n// 3 reset pswd\r\n\r\n    COMPONENT :\r\n\r\n    -reset pswd MAIN\r\n    -ResetForm  stage=1\r\n    -CodeForm  stage=2\r\n    -NewPasswordForm stage=3\r\n\r\n    SWITCH: \r\n\r\n    STEPPER: \r\n    https://codesandbox.io/s/cvdid?file=/demo.tsx\r\n\r\n*/\r\n\r\nfunction getSteps() {\r\n  return ['Enter your email', 'Enter Code', 'Reset Password'];\r\n}\r\n\r\n const ResetPassword = () => {\r\n    const classes = useStyles();\r\n\r\n    const [user,setUser] = useState(\"\");\r\n    const [/*email*/, setEmail] = useState(\"\");\r\n    const [code, setCode] = useState(\"\");\r\n    //const [password, setPassword] = useState(\"\");\r\n    //const [ confirmPassword, setConfirmPassword]= useState(\"\");\r\n\r\n    let history = useHistory();\r\n\r\n    function getStepContent(step) {\r\n  switch (step) {\r\n    case 0 :\r\n      return  <EmailForm  handleEmailSubmit={handleEmailSubmit} /> ;\r\n    case 1:\r\n        return <CodeForm  handleCodeSubmit={handleCodeSubmit}  />;\r\n    case 2:\r\n        return <NewPasswordForm handlePswdSubmit={handlePswdSubmit}  />;\r\n    default:\r\n        return 'Unknown step';\r\n  }\r\n}\r\n\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const steps = getSteps();\r\n  \r\n\r\n    const handleNext = () => {\r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n  \r\n    const handleBack = () => {\r\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n  \r\n    const handleReset = () => {\r\n      setActiveStep(0);\r\n      history.push(\"/login\");\r\n      \r\n    };\r\n  \r\n    const handleEmailSubmit = (userEmail, e) => { //want this method to make a request to authenticate with our backend and save the resulting token to a browser cookie.\r\n      setEmail({\r\n        userEmail\r\n      });\r\n      e.preventDefault();\r\n      fetch(`http://localhost:5000/api/emailcheck/${userEmail}`, {\r\n        method: 'GET',\r\n          headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }) \r\n     \r\n    .then(res => {  if (res.ok) { handleNext(); return res.json();  }   throw res;  })\r\n    .then(resJson => {\r\n      if (resJson.error) {\r\n        throw new Error(resJson.error);\r\n      }\r\n      console.log(resJson)  \r\n      setUser(resJson);     \r\n      })\r\n      .catch(error => {\r\n      console.error(error); })\r\n  };\r\n\r\n \r\n\r\n  const handleCodeSubmit = (code, e) => { //want this method to make a request to authenticate with our backend and save the resulting token to a browser cookie.\r\n    e.preventDefault();\r\n    setCode({code});\r\n    fetch(`http://localhost:5000/api/resetpassword/${user._id}/${code}`, {\r\n      method: 'GET',\r\n        headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    }) \r\n    .then(res => {  if (res.ok) {handleNext(); return res.json();  }   throw res;  })\r\n    .then(resJson => {\r\n      if (resJson.error) {\r\n        throw new Error(resJson.error);\r\n      }\r\n      })\r\n      .catch(error => {\r\n      console.error(error); }) \r\n  }\r\n\r\n  const handlePswdSubmit = (pswd, e) => { //want this method to make a request to authenticate with our backend and save the resulting token to a browser cookie.\r\n    e.preventDefault();\r\n\r\n    fetch(`http://localhost:5000/api/resetpassword/${user._id}/${code.code}`, {\r\n      method: 'PUT',\r\n        headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify( {\r\n        password: pswd\r\n      })   \r\n    }) \r\n    .then(res => {  if (res.ok) { handleNext(); return res.json(); }  throw res;  })\r\n  }\r\n\r\n\r\n    return(\r\n\r\n<Container component=\"main\" maxWidth=\"xs\">\r\n<div className={classes.paper}>\r\n  <Avatar className={classes.avatar}>\r\n    <LockOutlinedIcon />\r\n  </Avatar>\r\n  <Typography   component=\"h1\" variant=\"h5\">\r\n  Reset Password\r\n  </Typography>\r\n\r\n\r\n<div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>All steps completed</Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            {getStepContent(activeStep)}\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  \r\n</div>\r\n<Box mt={8}>\r\n    <Copyright />\r\n</Box>\r\n</Container>\r\n\r\n    )\r\n}\r\n    \r\nexport default ResetPassword;\r\n    ","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n\r\n    palette: {\r\n        primary: {\r\n          main: '#556cd6',\r\n        },\r\n        secondary: {\r\n          main: '#19857b',\r\n        },\r\n        \r\n        \r\n      },\r\n\r\n});\r\n\r\nexport default theme;","import \"./App.css\";\r\nimport React, {useReducer, createContext} from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport AuthReducer from './store/reducers/auth_reducer';\r\n\r\nimport withAuth from './withAuth';\r\nimport Home from './hooks/Home/Home';\r\nimport Login from './hooks/Login/Login';\r\nimport Register from './hooks/Register/Register';\r\nimport Users from './hooks/Users/Users';\r\nimport Secret from './hooks/Secret';\r\nimport Chat from './hooks/Messenger/Chat/Chat';\r\nimport Profile from './hooks/Profile';\r\nimport Edit from './hooks/EditUser/Edit';\r\nimport MailBox from \"./hooks/MailBox/Mailbox\";\r\nimport Auth from\"./hooks/Auth\";\r\nimport CreateAlbum from './hooks/EditUser/Albums/CreateAlbum';\r\nimport EditAlbum  from './hooks/EditUser/Albums/EditAlbum';\r\nimport Album from \"./hooks/Album\";\r\nimport Appbar from \"./hooks/Appbar/Appbar\";\r\nimport ResetPassword from \"./hooks/ResetPswd/ResetPassword\";\r\n\r\nimport {  ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from  './theme';\r\n\r\n\r\nexport const initialState = {\r\n  is_authenticated: false,\r\n  user: null,\r\n  token: null,\r\n  filter: null\r\n};\r\n\r\n\r\n// OBJET MAGIQUE QUI TRANSMET A TS LES COMPO \r\nexport const authContext = createContext();\r\n\r\n\r\nfunction App()    {\r\n \r\n /*\r\n      Auth Reducer\r\n  */\r\n  const [state, dispatch] =  useReducer(AuthReducer, initialState);  \r\n \r\n\r\n    return (\r\n    <div>\r\n\r\n    <ThemeProvider theme={theme}>\r\n\r\n    <authContext.Provider //va permettre de rendre nos données d’app disponibles aux composants \r\n      value={{   state,  dispatch     }}   >   \r\n     \r\n    <Appbar />\r\n    {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. React Router App*/}\r\n\r\n\r\n    <Switch>\r\n      <Route path=\"/login\" ><Login /></Route>\r\n      <Route path=\"/resetpassword\" ><ResetPassword /></Route>\r\n      <Route path=\"/register\" exact>{ ! state.is_authenticated ? <Register  />:<Home  />}</Route>\r\n      <Route exact path=\"/\">{ ! state.is_authenticated ? <Login />:<Home  />}</Route>\r\n      \r\n      <Route path=\"/edit\">{ ! state.is_authenticated ? <Login />:<Edit  />} </Route>\r\n\r\n      <Route path=\"/createAlbum\">{ ! state.is_authenticated ? <Login />:<CreateAlbum  />} </Route>\r\n      <Route exact path=\"/editAlbum/:id\">{ ! state.is_authenticated ? <Login />:<EditAlbum  />} </Route>\r\n      <Route exact path=\"/album/:id\" >{ ! state.is_authenticated ? <Login />:<Album />}</Route>\r\n\r\n      <Route exact path=\"/users\" >{ ! state.is_authenticated ? <Login />:<Users />}</Route>\r\n      <Route exact path=\"/user/:id\">{ ! state.is_authenticated ? <Login />:<Profile  />}</Route>\r\n      <Route path='/mailbox' exact>{ ! state.is_authenticated ? <Login  />:<MailBox />}</Route>\r\n\r\n      <Route exact path='/chat/:roomid/:id' exact >{ ! state.is_authenticated ? <Login/>:<Chat  />}</Route>\r\n\r\n      <Route path=\"/secret\" component={withAuth(Secret)} ><Secret/></Route>\r\n    </Switch>\r\n\r\n\r\n    <Auth /* IDLE-TIMER */ />\r\n    </authContext.Provider> \r\n    </ThemeProvider>\r\n    </div>    \r\n    ); \r\n    \r\n  }\r\n  \r\n  export default App ;\r\n\r\n\r\n","  \r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function withAuth(ComponentToProtect) {\r\n  return class extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        loading: true,\r\n        redirect: false,\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      fetch('/checkToken')\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            this.setState({ loading: false });\r\n          } else {\r\n            const error = new Error(res.error);\r\n            throw error;\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n          this.setState({ loading: false, redirect: true });\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n      const { loading, redirect } = this.state;\r\n     console.log(this.state)\r\n      if (loading) {\r\n        return null;\r\n      }\r\n      if (redirect) {\r\n        return <Redirect to=\"/login\" />;\r\n      } \r\n      \r\n      return <ComponentToProtect {...this.props} />;\r\n    }\r\n  }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n\r\n\r\nReactDOM.render(<Router><CssBaseline/><App /></Router>, document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}